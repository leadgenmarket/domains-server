{"ast":null,"code":"var _jsxFileName = \"/Users/laurkankusu/Documents/development/domains-server/plans/src/components/app/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { withApiService } from \"../hoc\";\nimport SideMenu from \"../../components/side-menu\";\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./app.css\";\nimport { Spinner } from \"../spinner\";\nimport { bindActionCreators } from 'redux';\nimport { compose } from '../../utils';\nimport { checkAuth } from \"../../actions\";\nimport ApiService from \"../../services/api-service\";\nimport { LoginPage } from \"../pages\";\nimport ToolBar from \"../tool-bar\";\nimport DomainsPage from \"../pages/domains/list\";\nimport DomainDetail from \"../pages/domains/detail\";\nimport DomainEdit from \"../pages/domains/edit\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    auth,\n    phone,\n    checkAuth\n  } = _ref;\n  const location = useLocation().pathname;\n  const history = useNavigate();\n\n  if (location == \"/logout\") {\n    let apiService = new ApiService();\n    apiService.logout();\n    history.replace(\"/\");\n  }\n\n  console.log(auth);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  if (auth == null) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  } else if (auth == false) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(DomainEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(DomainEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:id\",\n          element: /*#__PURE__*/_jsxDEV(DomainDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(DomainsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(App, \"lE9A8Pz91oyr5rDrgjG4tdnh7uQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = App;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authStatus: {\n      auth,\n      phone,\n      loading,\n      error\n    }\n  } = _ref2;\n  return {\n    auth,\n    phone\n  }; //\n};\n\nconst mapDispatchToProps = (dispatch, _ref3) => {\n  let {\n    apiService\n  } = _ref3;\n  return bindActionCreators({\n    checkAuth: checkAuth(apiService)\n  }, dispatch);\n};\n\nexport default compose(withApiService(), connect(mapStateToProps, mapDispatchToProps))(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/plans/src/components/app/app.js"],"names":["React","useEffect","Route","Routes","withApiService","SideMenu","connect","useLocation","useNavigate","Spinner","bindActionCreators","compose","checkAuth","ApiService","LoginPage","ToolBar","DomainsPage","DomainDetail","DomainEdit","ToastContainer","App","auth","phone","location","pathname","history","apiService","logout","replace","console","log","mapStateToProps","authStatus","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { Route, Routes } from \"react-router-dom\"\nimport { withApiService } from \"../hoc\"\nimport SideMenu from \"../../components/side-menu\"\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport \"./app.css\"\nimport { Spinner } from \"../spinner\"\nimport { bindActionCreators } from 'redux';\nimport { compose } from '../../utils';\nimport { checkAuth } from \"../../actions\"\nimport ApiService from \"../../services/api-service\"\nimport { LoginPage } from \"../pages\";\nimport ToolBar from \"../tool-bar\";\nimport DomainsPage from \"../pages/domains/list\";\nimport DomainDetail from \"../pages/domains/detail\";\nimport DomainEdit from \"../pages/domains/edit\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst App = ({ auth, phone, checkAuth }) => {\n    const location = useLocation().pathname;\n    const history = useNavigate()\n    if (location == \"/logout\") {\n        let apiService = new ApiService()\n        apiService.logout()\n        history.replace(\"/\")\n    }\n    console.log(auth)\n    useEffect(() => {\n        checkAuth()\n    }, [])\n\n\n\n    if (auth == null) {\n        return <Spinner />\n    } else if (auth == false) {\n        return (\n            <Routes>\n                <Route path=\"*\" element={<LoginPage />} ></Route>\n            </Routes>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <ToolBar />\n                <SideMenu />\n                <Routes>\n                    <Route path=\"/edit/:id\" element={<DomainEdit />} />\n                    <Route path=\"/add\" element={<DomainEdit />} />\n                    <Route path=\"/:id\" element={<DomainDetail />} />\n                    <Route path=\"/*\" element={<DomainsPage />} />\n                </Routes>\n                <ToastContainer />\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = ({ authStatus: { auth, phone, loading, error } }) => {\n    return { auth, phone }; //\n};\n\nconst mapDispatchToProps = (dispatch, { apiService }) => {\n    return bindActionCreators({\n        checkAuth: checkAuth(apiService)\n    }, dispatch);\n};\n\nexport default compose(\n    withApiService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(App)"]},"metadata":{},"sourceType":"module"}