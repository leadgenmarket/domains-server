{"ast":null,"code":"var loginRequested=function loginRequested(){return{type:'FETCH_LOGIN_REQUEST'};};var loginSuccess=function loginSuccess(){return{type:'FETCH_LOGIN_SUCCESS'};};var loginError=function loginError(error){return{type:'FETCH_LOGIN_ERROR',payload:error};};var notAuthorized=function notAuthorized(){return{type:'NOT_AUTHORIZED'};};var fetchLogin=function fetchLogin(apiService){return function(_ref){var login=_ref.login,pass=_ref.pass;return function(dispatch){dispatch(loginRequested());apiService.login(login,pass).then(function(data){return dispatch(loginSuccess(data));}).catch(function(err){return dispatch(loginError(err.response.data.Message));});};};};var fetchLogout=function fetchLogout(apiService){return function(){return function(dispatch){dispatch(loginRequested());apiService.logout().then(function(){return dispatch(notAuthorized());}).catch(function(){dispatch(loginSuccess());});};};};var checkAuth=function checkAuth(apiService){return function(){return function(dispatch){dispatch(loginRequested());apiService.ping().then(function(data){console.log(data);dispatch(loginSuccess(data));}).catch(function(){dispatch(notAuthorized());});};};};export{fetchLogin,fetchLogout,checkAuth};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/actions/auths.js"],"names":["loginRequested","type","loginSuccess","loginError","error","payload","notAuthorized","fetchLogin","apiService","login","pass","dispatch","then","data","catch","err","response","Message","fetchLogout","logout","checkAuth","ping","console","log"],"mappings":"AAAA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,MAAO,CACLC,IAAI,CAAE,qBADD,CAAP,CAGH,CAJD,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,MAAO,CACLD,IAAI,CAAE,qBADD,CAAP,CAGH,CAJD,CAMA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,MAAO,CACLH,IAAI,CAAE,mBADD,CAELI,OAAO,CAAED,KAFJ,CAAP,CAIH,CALD,CAOA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAO,CACLL,IAAI,CAAE,gBADD,CAAP,CAGH,CAJD,CASA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,QAAgB,mBAAEC,CAAAA,KAAF,MAAEA,KAAF,CAASC,IAAT,MAASA,IAAT,OAAmB,UAACC,QAAD,CAAc,CAChEA,QAAQ,CAACX,cAAc,EAAf,CAAR,CACAQ,UAAU,CAACC,KAAX,CAAiBA,KAAjB,CAAuBC,IAAvB,EACGE,IADH,CACQ,SAACC,IAAD,QAAUF,CAAAA,QAAQ,CAACT,YAAY,CAACW,IAAD,CAAb,CAAlB,EADR,EAEGC,KAFH,CAES,SAACC,GAAD,QAASJ,CAAAA,QAAQ,CAACR,UAAU,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAnB,CAAX,CAAjB,EAFT,EAGH,CALkC,EAAhB,EAAnB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACV,UAAD,QAAgB,kBAAM,UAACG,QAAD,CAAc,CACtDA,QAAQ,CAACX,cAAc,EAAf,CAAR,CACAQ,UAAU,CAACW,MAAX,GACGP,IADH,CACQ,iBAAMD,CAAAA,QAAQ,CAACL,aAAa,EAAd,CAAd,EADR,EAEGQ,KAFH,CAES,UAAI,CAACH,QAAQ,CAACT,YAAY,EAAb,CAAR,CAAyB,CAFvC,EAGD,CALmC,EAAhB,EAApB,CAQA,GAAMkB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACZ,UAAD,QAAgB,kBAAM,UAACG,QAAD,CAAc,CACpDA,QAAQ,CAACX,cAAc,EAAf,CAAR,CACAQ,UAAU,CAACa,IAAX,GACGT,IADH,CACQ,SAACC,IAAD,CAAU,CACdS,OAAO,CAACC,GAAR,CAAYV,IAAZ,EACAF,QAAQ,CAACT,YAAY,CAACW,IAAD,CAAb,CAAR,CACD,CAJH,EAKGC,KALH,CAKS,UAAI,CACTH,QAAQ,CAACL,aAAa,EAAd,CAAR,CAA0B,CAN9B,EAOD,CATiC,EAAhB,EAAlB,CAWA,OACIC,UADJ,CAEIW,WAFJ,CAGIE,SAHJ","sourcesContent":["const loginRequested = () => {\n    return {\n      type: 'FETCH_LOGIN_REQUEST'\n    };\n};\n  \nconst loginSuccess = () => {\n    return {\n      type: 'FETCH_LOGIN_SUCCESS',\n    };\n};\n  \nconst loginError = (error) => {\n    return {\n      type: 'FETCH_LOGIN_ERROR',\n      payload: error\n    };\n};\n\nconst notAuthorized = () => {\n    return {\n      type: 'NOT_AUTHORIZED'\n    }\n}\n\n\n\n\nconst fetchLogin = (apiService) => ({login, pass}) => (dispatch) => {\n    dispatch(loginRequested());\n    apiService.login(login,pass)\n      .then((data) => dispatch(loginSuccess(data)))\n      .catch((err) => dispatch(loginError(err.response.data.Message)));\n};\n\nconst fetchLogout = (apiService) => () => (dispatch) => {\n  dispatch(loginRequested());\n  apiService.logout()\n    .then(() => dispatch(notAuthorized()))\n    .catch(()=>{dispatch(loginSuccess())});\n};\n\n\nconst checkAuth = (apiService) => () => (dispatch) => {\n  dispatch(loginRequested());\n  apiService.ping()\n    .then((data) => {\n      console.log(data)\n      dispatch(loginSuccess(data))\n    })\n    .catch(()=>{\n      dispatch(notAuthorized())});\n};\n\nexport {\n    fetchLogin,\n    fetchLogout,\n    checkAuth,\n}"]},"metadata":{},"sourceType":"module"}