{"ast":null,"code":"import React,{useEffect}from\"react\";import{Route,Routes}from\"react-router-dom\";import{withApiService}from\"../hoc\";import SideMenu from\"../../components/side-menu\";import{connect}from'react-redux';import{useLocation,useNavigate}from\"react-router-dom\";import jwt_decode from\"jwt-decode\";import Cookies from'js-cookie';import\"./app.css\";import{Spinner}from\"../spinner\";import{bindActionCreators}from'redux';import{compose}from'../../utils';import{checkAuth}from\"../../actions\";import ApiService from\"../../services/api-service\";import{LoginPage}from\"../pages\";import ToolBar from\"../tool-bar\";import DomainsPage from\"../pages/domains/list\";import DomainDetail from\"../pages/domains/detail\";import DomainEdit from\"../pages/domains/edit\";import{TitlesList}from\"../pages/titles/titles-list\";import LeadsList from\"../pages/leads/leads-list\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var auth=_ref.auth,phone=_ref.phone,checkAuth=_ref.checkAuth;var location=useLocation().pathname;var history=useNavigate();if(location==\"/logout\"){var apiService=new ApiService();apiService.logout();history.replace(\"/\");}console.log(auth);useEffect(function(){checkAuth();},[]);if(auth==null){return/*#__PURE__*/_jsx(Spinner,{});}else if(auth==false){return/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(LoginPage,{})})});}else{return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ToolBar,{}),/*#__PURE__*/_jsx(SideMenu,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/admin/leads/\",element:/*#__PURE__*/_jsx(LeadsList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/titles/\",element:/*#__PURE__*/_jsx(TitlesList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/edit/:id\",element:/*#__PURE__*/_jsx(DomainEdit,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/add\",element:/*#__PURE__*/_jsx(DomainEdit,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/:id\",element:/*#__PURE__*/_jsx(DomainDetail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/*\",element:/*#__PURE__*/_jsx(DomainsPage,{})})]})]});}};var mapStateToProps=function mapStateToProps(_ref2){var _ref2$authStatus=_ref2.authStatus,auth=_ref2$authStatus.auth,phone=_ref2$authStatus.phone,loading=_ref2$authStatus.loading,error=_ref2$authStatus.error;return{auth:auth,phone:phone};//\n};var mapDispatchToProps=function mapDispatchToProps(dispatch,_ref3){var apiService=_ref3.apiService;return bindActionCreators({checkAuth:checkAuth(apiService)},dispatch);};export default compose(withApiService(),connect(mapStateToProps,mapDispatchToProps))(App);/*<Navbar />\n                <SideMenu />}*/ /*<Routes>\n                    <Route path=\"/off-days\" component={ReservePreventPage} exact />\n                    <Route path=\"/clients/blocked\" component={BlackListPage} exact />\n                    <Route path=\"/objects\" component={ObjectsPage} exact/>\n                    <Route path=\"/objects/:objectID\" component={ObjectDetail} exact/>\n                    <Route path=\"/halls/list\" component={Halls} exact/>\n                    <Route path=\"/halls/panoramas\" component={Panoramas} exact/>\n                    <Route path=\"/halls/schemes\" component={Schemes} exact/>\n                    <Route path=\"/employees\" component={ EmployeesPage} exact/>\n                    <Route path=\"/services\" component={Services} exact/>\n                    <Route path=\"/actions\" component={ActionsPage} exact/>\n                    <Route path=\"/photos\" component={PhotosPage}/>\n        <Route path=\"/\" component={Dashboard}/>*/","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/components/app/app.js"],"names":["React","useEffect","Route","Routes","withApiService","SideMenu","connect","useLocation","useNavigate","jwt_decode","Cookies","Spinner","bindActionCreators","compose","checkAuth","ApiService","LoginPage","ToolBar","DomainsPage","DomainDetail","DomainEdit","TitlesList","LeadsList","App","auth","phone","location","pathname","history","apiService","logout","replace","console","log","mapStateToProps","authStatus","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport {Route, Routes} from \"react-router-dom\"\nimport {withApiService} from \"../hoc\"\nimport SideMenu from \"../../components/side-menu\"\nimport { connect } from 'react-redux';\nimport {useLocation, useNavigate} from \"react-router-dom\"\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from 'js-cookie';\nimport \"./app.css\"\nimport { Spinner } from \"../spinner\"\nimport { bindActionCreators } from 'redux';\nimport { compose } from '../../utils';\nimport { checkAuth } from \"../../actions\"\nimport ApiService from \"../../services/api-service\"\nimport { LoginPage } from \"../pages\";\nimport ToolBar from \"../tool-bar\";\nimport DomainsPage from \"../pages/domains/list\";\nimport DomainDetail from \"../pages/domains/detail\";\nimport DomainEdit from \"../pages/domains/edit\";\nimport { TitlesList } from \"../pages/titles/titles-list\";\nimport LeadsList from \"../pages/leads/leads-list\";\n\nconst App = ({ auth, phone, checkAuth}) => {\n    const location = useLocation().pathname;\n    const history = useNavigate()\n    if (location == \"/logout\") {\n        let apiService = new ApiService()\n        apiService.logout()\n        history.replace(\"/\")\n    }\n    console.log(auth)\n    useEffect(()=>{\n        checkAuth()\n    },[])\n\n    \n\n    if (auth == null) {\n        return <Spinner />\n    } else if(auth==false){\n        return (\n            <Routes>\n                <Route path=\"*\" element={<LoginPage />} ></Route>\n            </Routes>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <ToolBar />\n                <SideMenu />\n                <Routes>\n                    <Route path=\"/admin/leads/\" element={<LeadsList />} />\n                    <Route path=\"/admin/titles/\" element={<TitlesList />} />\n                    <Route path=\"/admin/edit/:id\" element={<DomainEdit />} />\n                    <Route path=\"/admin/add\" element={<DomainEdit />} />\n                    <Route path=\"/admin/:id\" element={<DomainDetail />} />\n                    <Route path=\"/admin/*\" element={<DomainsPage />} />\n                </Routes>\n            </React.Fragment>\n        )        \n    }\n}\n\nconst mapStateToProps = ({ authStatus: { auth, phone, loading, error }}) => {\n    return { auth, phone }; //\n};\n\nconst mapDispatchToProps = (dispatch, { apiService}) => {\n    return bindActionCreators({\n        checkAuth: checkAuth(apiService)\n    }, dispatch);\n};\n\nexport default compose(\n    withApiService(),\n    connect(mapStateToProps, mapDispatchToProps)\n  )(App)\n\n  /*<Navbar />\n                <SideMenu />}*/\n                /*<Routes>\n                    <Route path=\"/off-days\" component={ReservePreventPage} exact />\n                    <Route path=\"/clients/blocked\" component={BlackListPage} exact />\n                    <Route path=\"/objects\" component={ObjectsPage} exact/>\n                    <Route path=\"/objects/:objectID\" component={ObjectDetail} exact/>\n                    <Route path=\"/halls/list\" component={Halls} exact/>\n                    <Route path=\"/halls/panoramas\" component={Panoramas} exact/>\n                    <Route path=\"/halls/schemes\" component={Schemes} exact/>\n                    <Route path=\"/employees\" component={ EmployeesPage} exact/>\n                    <Route path=\"/services\" component={Services} exact/>\n                    <Route path=\"/actions\" component={ActionsPage} exact/>\n                    <Route path=\"/photos\" component={PhotosPage}/>\n        <Route path=\"/\" component={Dashboard}/>*/"]},"metadata":{},"sourceType":"module"}