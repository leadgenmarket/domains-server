{"ast":null,"code":"import axios from \"axios\";\n\nconst sendFormWithAttach = (url, form, type) => {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  const send = new FormData();\n  Object.keys(form).forEach(key => {\n    if (key == \"files\") {\n      if (form[key].length > 1) {\n        form[key].forEach(el => {\n          send.append(\"files\", form[key]);\n        });\n      } else {\n        send.append('file', form[key][0]);\n      }\n    }\n\n    send.append(key, form[key]);\n  });\n\n  if (type == 'post') {\n    return axios.post(url, send, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n  } else if (type == 'put') {\n    return axios.put(url, send, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\nexport default class ApiService {\n  constructor() {\n    this.login = (login, pass) => {\n      console.log(login);\n      console.log(pass);\n      return axios.post(\"/sign-in\", {\n        login,\n        pass\n      });\n    };\n\n    this.ping = () => {\n      return axios.get(\"/api/ping\");\n    };\n\n    this.logout = () => {\n      return axios.get(\"/api/logout\");\n    };\n\n    this.domainsList = () => {\n      return axios.get(\"/api/plans-sites/\");\n    };\n\n    this.domain = id => {\n      return axios.get(\"/api/plans-sites/\" + id);\n    };\n\n    this.addDomain = () => {\n      return axios.put(\"/api/plans-sites/\");\n    };\n\n    this.deleteDomain = id => {\n      return axios.delete(\"/api/plans-sites/\" + id);\n    };\n\n    this.domainSave = data => {\n      return axios({\n        url: \"/api/domains/add\",\n        method: \"post\",\n        data: data,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/plans/src/services/api-service.js"],"names":["axios","sendFormWithAttach","url","form","type","config","headers","send","FormData","Object","keys","forEach","key","length","el","append","post","put","ApiService","login","pass","console","log","ping","get","logout","domainsList","domain","id","addDomain","deleteDomain","delete","domainSave","data","method"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nconst sendFormWithAttach = (url, form, type) => {\n    const config = {\n        headers: { 'content-type': 'multipart/form-data' }\n    }\n    const send = new FormData()\n    Object.keys(form).forEach((key) => {\n        if (key == \"files\") {\n            if (form[key].length > 1) {\n                form[key].forEach((el) => {\n                    send.append(\"files\", form[key]);\n                })\n            } else {\n                send.append('file', form[key][0])\n            }\n        }\n        send.append(key, form[key])\n    })\n    if (type == 'post') {\n        return axios.post(url, send, { headers: { 'content-type': 'multipart/form-data' } })\n    } else if (type == 'put') {\n        return axios.put(url, send, { headers: { 'content-type': 'multipart/form-data' } })\n    }\n}\n\nexport default class ApiService {\n    login = (login, pass) => {\n        console.log(login)\n        console.log(pass)\n        return axios.post(\"/sign-in\", { login, pass })\n    }\n\n    ping = () => {\n        return axios.get(\"/api/ping\")\n    }\n\n    logout = () => {\n        return axios.get(\"/api/logout\")\n    }\n\n    domainsList = () => {\n        return axios.get(\"/api/plans-sites/\")\n    }\n\n    domain = (id) => {\n        return axios.get(\"/api/plans-sites/\" + id)\n    }\n\n    addDomain = () => {\n        return axios.put(\"/api/plans-sites/\")\n    }\n\n    deleteDomain = (id) => {\n        return axios.delete(\"/api/plans-sites/\" + id)\n    }\n\n    domainSave = (data) => {\n        return axios({\n            url: \"/api/domains/add\",\n            method: \"post\",\n            data: data,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}