{"ast":null,"code":"import Konva from \"konva\";\n\nconst getZones = (group, alt) => {\n  let sizes = {\n    'corner': [49, 52.2],\n    'center': [42.5, 42.5]\n  };\n  let zones = [];\n  let targetRect;\n  let position;\n  let width;\n  let height;\n  let persons_width;\n  let persons_height;\n  let zns_cnt;\n  let x;\n  let y;\n  let rotate;\n  group.children.forEach(canvas_element => {\n    if (canvas_element.className == 'Rect') {\n      targetRect = canvas_element.getClientRect();\n      position = [targetRect.x, targetRect.y];\n      width = targetRect.width;\n      height = targetRect.height;\n      persons_width = Math.round((width - 18) / 42);\n      persons_height = Math.round((height - 18) / 42);\n      let zns_cnt = 2 * persons_width + 2 * persons_height + 3;\n\n      for (let i = 0; i <= zns_cnt; i++) {\n        let corners = [0, persons_width + 1, persons_width + persons_height + 2, 2 * persons_width + persons_height + 3];\n        let contr_rect = {\n          x: position[0] - 39,\n          y: position[1] - 39,\n          width: width + 78,\n          height: height + 78\n        };\n\n        if (corners.indexOf(i) != -1) {\n          let corner;\n\n          if (i == corners[0]) {\n            x = contr_rect.x;\n            y = contr_rect.y;\n            rotate = 270;\n            corner = 0;\n\n            if (alt == true) {\n              zones.push({\n                x: x,\n                y: y,\n                width: sizes['corner'][0],\n                height: sizes['corner'][1],\n                type: 0,\n                rotate: 0,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner,\n                mirrored: true,\n                align: 'end'\n              });\n              zones.push({\n                x: x,\n                y: y,\n                width: 0,\n                height: 0,\n                type: 1\n              });\n            } else {\n              zones.push({\n                x: x + sizes['corner'][0] / 2,\n                y: y,\n                width: sizes['corner'][0] / 2,\n                height: sizes['center'][1],\n                type: 0,\n                rotate: 0,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner,\n                mirrored: true,\n                align: 'end'\n              });\n              zones.push({\n                x: x,\n                y: y + sizes['corner'][1] / 2,\n                width: sizes['center'][1],\n                height: sizes['corner'][0] / 2,\n                type: 0,\n                rotate: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n            }\n          } else if (i == corners[1]) {\n            x = contr_rect.x + contr_rect.width - sizes['corner'][0];\n            y = contr_rect.y;\n            rotate = 0;\n            corner = 1;\n\n            if (alt == true) {\n              zones.push({\n                x: x,\n                y: y,\n                width: sizes['corner'][0],\n                height: sizes['corner'][1],\n                type: 0,\n                rotate: 0,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x,\n                y: y,\n                width: 0,\n                height: 0,\n                type: 1\n              });\n            } else {\n              zones.push({\n                x: x,\n                y: y,\n                width: sizes['corner'][0] / 2,\n                height: sizes['center'][1],\n                type: 0,\n                rotate: 0,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x + 4,\n                y: y + sizes['corner'][1] / 2,\n                width: sizes['center'][1],\n                height: sizes['corner'][0] / 2,\n                type: 0,\n                rotate: 90,\n                parent: canvas_element._id,\n                corner: corner,\n                mirrored: true,\n                align: 'end'\n              });\n            }\n          } else if (i == corners[2]) {\n            x = contr_rect.x + contr_rect.width - sizes['corner'][0];\n            y = contr_rect.y + contr_rect.height - sizes['corner'][1] + 2.5;\n            rotate = 90;\n            corner = 2;\n\n            if (alt == true) {\n              zones.push({\n                x: x + 4,\n                y: y,\n                width: sizes['corner'][0],\n                height: sizes['corner'][1],\n                type: 0,\n                rotate: 90,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x,\n                y: y,\n                width: 0,\n                height: 0,\n                type: 1\n              });\n            } else {\n              zones.push({\n                x: x + 4,\n                y: y,\n                width: sizes['center'][1],\n                height: sizes['corner'][0] / 2,\n                type: 0,\n                rotate: 90,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x,\n                y: y + 4,\n                width: sizes['corner'][0] / 2,\n                height: sizes['center'][1],\n                type: 0,\n                rotate: 180,\n                parent: canvas_element._id,\n                corner: corner,\n                mirrored: true\n              });\n            }\n          } else if (i == corners[3]) {\n            x = contr_rect.x;\n            y = contr_rect.y + contr_rect.height - sizes['corner'][1] + 2.5;\n            rotate = 180;\n            corner = 3;\n\n            if (alt == true) {\n              zones.push({\n                x: x,\n                y: y,\n                width: sizes['corner'][0],\n                height: sizes['corner'][1],\n                type: 0,\n                rotate: 180,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x,\n                y: y,\n                width: 0,\n                height: 0,\n                type: 1\n              });\n            } else {\n              zones.push({\n                x: x + sizes['corner'][0] / 2,\n                y: y,\n                width: sizes['center'][1] / 2,\n                height: sizes['corner'][0],\n                type: 0,\n                rotate: 180,\n                rotate_: rotate,\n                parent: canvas_element._id,\n                corner: corner\n              });\n              zones.push({\n                x: x,\n                y: y,\n                width: sizes['corner'][0],\n                height: sizes['center'][1] / 2,\n                type: 0,\n                rotate: 270,\n                parent: canvas_element._id,\n                corner: corner,\n                mirrored: true\n              });\n            }\n          }\n        } else {\n          let quarter;\n\n          if (i < corners[1]) {\n            x = contr_rect.x + sizes['corner'][0] + (i - 1) * sizes['center'][0];\n            y = contr_rect.y;\n            rotate = 0;\n            quarter = 0;\n          } else if (i > corners[1] && i < corners[2]) {\n            let cnt = 1;\n\n            while (true) {\n              //центральных вставок до текущего элемента на стороне\n              if (i - cnt == corners[1]) {\n                break;\n              } else {\n                cnt++;\n              }\n            }\n\n            x = contr_rect.x + contr_rect.width - sizes['center'][0] + 3;\n            y = contr_rect.y + sizes['corner'][1] + (cnt - 1) * sizes['center'][1];\n            rotate = 90;\n            quarter = 1;\n          } else if (i > corners[2] && i < corners[3]) {\n            let cnt = 1;\n\n            while (true) {\n              //центральных вставок до текущего элемента на стороне\n              if (i - cnt == corners[2]) {\n                break;\n              } else {\n                cnt++;\n              }\n            }\n\n            x = contr_rect.x + contr_rect.width - sizes['corner'][0] - cnt * sizes['center'][0] - 0.25; //contr_rect.x+sizes['corner'][0]+(i-1)*sizes['center'][0]\n\n            y = contr_rect.y + contr_rect.height - sizes['center'][1] + 5.5; //position[1]+height+0.5 //\n\n            rotate = 180;\n            quarter = 2;\n          } else if (i > corners[3]) {\n            let cnt = 1;\n\n            while (true) {\n              //центральных вставок до текущего элемента на стороне\n              if (i - cnt == corners[3]) {\n                break;\n              } else {\n                cnt++;\n              }\n            }\n\n            x = contr_rect.x - 3.5;\n            y = contr_rect.y + sizes['corner'][1] + (cnt - 1) * sizes['center'][0] - 0.6;\n            rotate = 270;\n            quarter = 3;\n          }\n\n          if (alt == true) {\n            zones.push({\n              x: x,\n              y: y,\n              width: sizes['center'][1],\n              height: sizes['center'][0],\n              type: 1,\n              rotate: rotate,\n              parent: canvas_element._id,\n              corner: false,\n              quarter: quarter,\n              second: false,\n              mirrored: quarter == 0 || quarter == 1 ? false : true\n            });\n            zones.push({\n              x: x,\n              y: y,\n              width: 0,\n              height: 0,\n              type: 1\n            });\n          } else {\n            zones.push({\n              x: x,\n              y: y,\n              width: quarter == 0 || quarter == 2 ? sizes['center'][1] / 2 : sizes['center'][1],\n              height: quarter == 1 || quarter == 3 ? sizes['center'][1] / 2 : sizes['center'][0],\n              type: 1,\n              rotate: rotate,\n              parent: canvas_element._id,\n              corner: false,\n              quarter: quarter,\n              second: false,\n              mirrored: quarter == 0 || quarter == 1 ? false : true\n            });\n            zones.push({\n              x: quarter == 0 || quarter == 2 ? x + sizes['center'][1] / 2 : x,\n              y: quarter == 1 || quarter == 3 ? y + sizes['center'][0] / 2 : y,\n              width: quarter == 0 || quarter == 2 ? sizes['center'][1] / 2 : sizes['center'][1],\n              height: quarter == 1 || quarter == 3 ? sizes['center'][1] / 2 : sizes['center'][0],\n              type: 1,\n              rotate: rotate,\n              parent: canvas_element._id,\n              corner: false,\n              quarter: quarter,\n              mirrored: quarter == 0 || quarter == 1 ? true : false,\n              second: true\n            });\n          }\n        }\n      }\n    }\n  });\n  return zones;\n};\n\nconst rotatePoint = (_ref, rad) => {\n  let {\n    x,\n    y\n  } = _ref;\n  const rcos = Math.cos(rad);\n  const rsin = Math.sin(rad);\n  return {\n    x: x * rcos - y * rsin,\n    y: y * rcos + x * rsin\n  };\n};\n\nconst rotateAroundCenter = (node, rotation) => {\n  //current rotation origin (0, 0) relative to desired origin - center (node.width()/2, node.height()/2)\n  const topLeft = {\n    x: -node.width() / 2,\n    y: -node.height() / 2\n  };\n  const current = rotatePoint(topLeft, Konva.getAngle(node.rotation()));\n  const rotated = rotatePoint(topLeft, Konva.getAngle(rotation));\n  const dx = rotated.x - current.x,\n        dy = rotated.y - current.y;\n  node.rotation(rotation);\n  node.x(node.x() + dx);\n  node.y(node.y() + dy);\n};\n\nconst furnitureNew = (layer, callback, zones) => {\n  let zone_id;\n  let furniture_id;\n  let furnitures = {}; //чистим все зоны и пересечения\n\n  layer.children.forEach(child => {\n    if (child.attrs.type == \"child\") {\n      console.log('child'); //console.log(child.attrs.zoneId)\n      //console.log(child.attrs.id)\n\n      if (child.attrs.zoneId != undefined) furnitures[child.attrs.zoneId] = child.attrs.id;\n    }\n\n    if (child.attrs.type == \"zone\") {\n      zone_id = child.attrs.id;\n      child.destroy();\n    } else {\n      if (child.attrs.type == \"temproary\") {\n        furniture_id = child.attrs.id;\n      }\n    }\n  });\n\n  if (zone_id != null) {\n    furnitures[zone_id] = furniture_id;\n  }\n\n  callback(furnitures);\n};\n\nconst drawSvg = (file, position, scale, rotation, layer, actions, zones, id, type, callback, zoneId) => {\n  var imageObj = new Image();\n\n  imageObj.onload = function () {\n    var yoda = new Konva.Image({\n      x: position[0],\n      y: position[1],\n      image: imageObj,\n      width: this.width * scale,\n      height: this.height * scale,\n      draggable: true,\n      id: id,\n      type: type != undefined ? type : \"child\",\n      zoneId: zoneId\n    });\n    yoda.zIndex(1); // add the shape to the layer\n\n    yoda.on('mouseover', function () {\n      document.body.style.cursor = 'pointer';\n    });\n    yoda.on('mouseout', function () {\n      document.body.style.cursor = 'default';\n    });\n\n    if (actions) {\n      yoda.on('dragstart', () => {\n        if (yoda.attrs.type != \"child\") {\n          drawSvg(file, position, scale, rotation, layer, true, zones, id);\n        } else {\n          yoda.destroy();\n          furnitureNew(layer, callback, zones);\n        }\n\n        yoda.off('dragstart');\n        yoda.attrs.type = \"temproary\";\n      });\n\n      if (yoda.attrs.type == \"child\") {\n        yoda.on('click', () => {\n          yoda.destroy();\n          furnitureNew(layer, callback, zones);\n        });\n        yoda.on('mouseover', () => {\n          yoda.stroke('red');\n          layer.draw();\n        });\n        yoda.on('mouseout', () => {\n          yoda.stroke('transparent');\n          layer.draw();\n        });\n      }\n    }\n\n    yoda.on('dragend', () => {\n      furnitureNew(layer, callback, zones);\n    });\n    yoda.on('dragmove', () => {\n      //чистим все\n      layer.children.forEach(child => {\n        if (child.attrs.type == \"zone\") {\n          child.destroy();\n        }\n      }); //отсюда получаем список всех пересечений\n\n      let childSh = [];\n      zones.forEach(child => {\n        if (child === yoda) {\n          return;\n        }\n\n        if (haveIntersection(child, yoda.getClientRect())) {\n          childSh.push(child);\n        }\n\n        try {\n          child.fill('transparent');\n        } catch (e) {}\n      }); //здесь находим более близкое пересечение и заливаем\n\n      if (childSh.length > 0) {\n        let prefSelect = null;\n        childSh.forEach(childSel => {\n          if (prefSelect == null) {\n            prefSelect = childSel;\n          } else {\n            let curs = yoda.getClientRect();\n            let newSel = childSel;\n            let prefSel = prefSelect;\n\n            if (curs.x - prefSel.x + curs.y - prefSel.y > curs.x - newSel.x + curs.y - newSel.y) {\n              prefSelect = childSel;\n            }\n          }\n        });\n\n        try {\n          let i = 0;\n          zones.forEach(zone => {\n            if (zone == prefSelect) {\n              drawRect(prefSelect.height, prefSelect.width, prefSelect.x, prefSelect.y, layer, i);\n            }\n\n            i++;\n          });\n        } catch (e) {}\n      }\n    });\n    layer.add(yoda);\n    layer.draw();\n\n    if (rotation != null) {\n      rotateAroundCenter(yoda, rotation);\n    }\n  };\n\n  if (file.indexOf('/') == -1) imageObj.src = process.env.PUBLIC_URL + '/png/' + file;else imageObj.src = file;\n};\n\nconst drawTable = (position, persons_width, persons_height, name, draggable, layer, containerSize) => {\n  let width = persons_width * 42 + 18;\n  let height = persons_height * 42 + 18;\n  var group = new Konva.Group({\n    draggable: false,\n    type: 'table'\n  }); //столик\n\n  var rect = new Konva.Rect({\n    x: position[0] + (containerSize.width - width) / 2,\n    y: position[1] + (containerSize.height - height - 40) / 2,\n    width: width,\n    height: height,\n    fill: '#67b17a',\n    stroke: '#4c835a',\n    strokeWidth: 2.5,\n    cornerRadius: 10,\n    opacity: 0.9\n  });\n  group.add(rect);\n  layer.add(group);\n  layer.draw();\n  return group;\n};\n\nconst drawRect = (height, width, x, y, layer, id) => {\n  var group = new Konva.Group({\n    draggable: false\n  }); //столик\n\n  var rect = new Konva.Rect({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    fill: '#67b17a',\n    opacity: 0.9,\n    type: 'zone',\n    id: id\n  });\n  layer.add(rect);\n  layer.draw();\n  return group;\n};\n\nconst haveIntersection = (r1, r2) => {\n  return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n};\n\nconst drawTableWithFurniture = (icon, name, layer, furnitures, containerSize, callback) => {\n  if (typeof icon.position_xy === \"string\" && icon.position_xy.length > 0) {\n    icon.position_xy = JSON.parse(icon.position_xy);\n    icon.furnitures = JSON.parse(icon.furnitures);\n  }\n\n  let group = drawTable([0, 0], icon.width_cnt, icon.height_cnt, name, true, layer, containerSize);\n  let zones = getZones(group, false);\n  let zones_tmp = getZones(group, false);\n  let sizes = {\n    'corner': [49, 52.2],\n    'center': [42.5, 42.5]\n  };\n  let targetRect;\n  let position;\n  let width;\n  let height;\n  zones_tmp.forEach((zone, i) => {\n    if (zone.corner !== false) {\n      if (!zone.rotate_ && zone.rotate_ !== 0) {\n        zone.width = 0;\n        zone.height = 0;\n      } else {\n        group.children.forEach(element => {\n          if (element.className == 'Rect') {\n            targetRect = element.getClientRect();\n            position = [targetRect.x, targetRect.y];\n          }\n        });\n        let contr_rect = {\n          x: position[0] - 39,\n          y: position[1] - 39,\n          width: width + 78,\n          height: height + 78\n        };\n        width = targetRect.width;\n        height = targetRect.height;\n\n        if (zone.corner == 0) {\n          zone.x = contr_rect.x;\n          zone.y = contr_rect.y;\n          zone.width = sizes['corner'][0];\n          zone.height = sizes['corner'][1];\n          zone.rotate = zone.rotate_;\n        } else if (zone.corner == 1) {\n          zone.x = contr_rect.x + contr_rect.width - sizes['corner'][0];\n          zone.y = contr_rect.y;\n          zone.width = sizes['corner'][0];\n          zone.height = sizes['corner'][1];\n          zone.rotate = zone.rotate_;\n        } else if (zone.corner == 2) {\n          zone.x = contr_rect.x + contr_rect.width - sizes['corner'][0];\n          zone.y = contr_rect.y + contr_rect.height - sizes['corner'][1] + 2.5;\n          zone.width = sizes['corner'][0];\n          zone.height = sizes['corner'][1];\n          zone.rotate = zone.rotate_;\n        } else if (zone.corner == 3) {\n          zone.x = contr_rect.x;\n          zone.y = contr_rect.y + contr_rect.height - sizes['corner'][1] + 2.5;\n          zone.width = sizes['corner'][0];\n          zone.height = sizes['corner'][1];\n          zone.rotate = zone.rotate_;\n        }\n      }\n    } else if (zone.second === true) {\n      zone.width = 0;\n      zone.height = 0;\n    } else if (zone.second === false && (zone.quarter == 0 || zone.quarter == 2)) {\n      zone.width = sizes['center'][0];\n    } else {\n      zone.height = sizes['center'][1];\n    }\n  });\n\n  if (Object.keys(icon.furnitures).length > 0) {\n    Object.keys(icon.furnitures).forEach(index => {\n      let furniture_keys = Object.keys(furnitures);\n\n      for (let i = 0; i < furniture_keys.length; i++) {\n        let furniture = furnitures[furniture_keys[i]];\n\n        if (furniture.ID == icon.furnitures[index]) {\n          //drawSvg( process.env.PUBLIC_URL+'/img/furnitures/'+furniture.ID+'/'+furniture.image_vacant, [zones[index].x,zones[index].y], 0.2, zones[index].rotate==0?null:zones[index].rotate, group);\n          if (furniture.ID != 3) {\n            //file, position, scale, rotation, layer, actions, zones, id, type, callback\n            drawSvg('/public/furnitures/' + furniture.ID + '/1.png', [zones_tmp[index].x, zones_tmp[index].y], 0.2, zones[index].corner !== false ? zones[index].rotate_ : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n          } else {\n            let target_width = 18.2;\n            let target_height = 35.6;\n\n            if (zones[index].corner !== false) {\n              //тут для угловых частей\n              if (zones[index].mirrored) {\n                if (zones[index].align == 'end') {\n                  if (zones[index].corner == 1 && !zones[index].rotate_) {\n                    drawSvg('/public/furnitures/' + furniture.ID + '/1r.png', [zones[index].x + zones[index].width - target_width - 7, zones[index].y - 4.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                  } else if (zones[index].corner === 0) {\n                    //левый верхний второй\n                    drawSvg('/public/furnitures/' + furniture.ID + '/1r.png', [zones[index].x + zones[index].width - target_width - 0.5, zones[index].y + 0.3], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                  } else {\n                    drawSvg('/public/furnitures/' + furniture.ID + '/1r.png', [zones[index].x + zones[index].width - target_width, zones[index].y - 1.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                  }\n                } else {\n                  if (zones[index].corner == 2 && !zones[index].rotate_) {\n                    //правый нижний второй\n                    drawSvg('/public/furnitures/' + furniture.ID + '/1r.png', [zones[index].x, zones[index].y + zones[index].height - target_height + 2], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                  }\n\n                  if (zones[index].corner == 3 && !zones[index].rotate_) {\n                    //левый нижний второй\n                    drawSvg('/public/furnitures/' + furniture.ID + '/1r.png', [zones[index].x + 8.5, zones[index].y + zones[index].height - target_height + 5.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                  }\n                }\n              } else {\n                if (zones[index].corner == 2 && zones[index].rotate_) {\n                  //нижний правый первый\n                  drawSvg('/public/furnitures/' + furniture.ID + '/1.png', [zones[index].x + zones[index].width - target_width - 7, zones[index].y + zones[index].height - target_height + 3], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else if (zones[index].corner == 3 && zones[index].rotate_) {\n                  //нижний левый первый\n                  drawSvg('/public/furnitures/' + furniture.ID + '/1.png', [zones[index].x + zones[index].width - target_width + 3, zones[index].y + zones[index].height - target_height - 0.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else if (zones[index].corner === 0) {\n                  //левый верхний второ\n                  drawSvg('/public/furnitures/' + furniture.ID + '/1.png', [zones[index].x + 8.5, zones[index].y - 5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else {\n                  drawSvg('/public/furnitures/' + furniture.ID + '/1.png', [zones[index].x, zones[index].y], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                }\n              }\n            } else {\n              //тут для центральных частей\n              let image = '/public/furnitures/' + furniture.ID + '/1.png';\n\n              if (zones[index].mirrored) {\n                image = image.replace('.png', 'r.png');\n              }\n\n              if (zones[index].quarter === 0) {\n                if (zones[index].mirrored) {\n                  drawSvg(image, [zones[index].x + zones[index].width - target_width, zones[index].y + 0.2], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else {\n                  drawSvg(image, [zones[index].x, zones[index].y + 0.2], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                }\n              } else if (zones[index].quarter == 1 || zones[index].quarter == 3) {\n                if (zones[index].second == false) {\n                  drawSvg(image, [zones[index].x + 11.8, zones[index].y + zones[index].height - target_height + 2.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else {\n                  drawSvg(image, [zones[index].x + 11.8, zones[index].y + zones[index].height - target_height + 5.5], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                }\n              } else if (zones[index].quarter == 2) {\n                if (zones[index].second == false) {\n                  drawSvg(image, [zones[index].x - 1, zones[index].y + 0.2], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                } else {\n                  drawSvg(image, [zones[index].x + 3, zones[index].y + 0.2], 0.2, zones[index].rotate == 0 ? null : zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n      }\n    });\n    /*if (icon.attrs!=''){\n        group.setAttrs(JSON.parse(icon.attrs))\n        layer.draw()\n    }*/\n\n    setTimeout(() => {\n      layer.draw();\n    }, 100);\n  }\n\n  return group;\n};\n\nexport { getZones, rotateAroundCenter, drawSvg, drawTable, drawRect, haveIntersection, drawTableWithFurniture };","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/components/modals/components/icon-add-modal/functions.js"],"names":["Konva","getZones","group","alt","sizes","zones","targetRect","position","width","height","persons_width","persons_height","zns_cnt","x","y","rotate","children","forEach","canvas_element","className","getClientRect","Math","round","i","corners","contr_rect","indexOf","corner","push","type","rotate_","parent","_id","mirrored","align","quarter","cnt","second","rotatePoint","rad","rcos","cos","rsin","sin","rotateAroundCenter","node","rotation","topLeft","current","getAngle","rotated","dx","dy","furnitureNew","layer","callback","zone_id","furniture_id","furnitures","child","attrs","console","log","zoneId","undefined","id","destroy","drawSvg","file","scale","actions","imageObj","Image","onload","yoda","image","draggable","zIndex","on","document","body","style","cursor","off","stroke","draw","childSh","haveIntersection","fill","e","length","prefSelect","childSel","curs","newSel","prefSel","zone","drawRect","add","src","process","env","PUBLIC_URL","drawTable","name","containerSize","Group","rect","Rect","strokeWidth","cornerRadius","opacity","r1","r2","drawTableWithFurniture","icon","position_xy","JSON","parse","width_cnt","height_cnt","zones_tmp","element","Object","keys","index","furniture_keys","furniture","ID","target_width","target_height","replace","setTimeout"],"mappings":"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","sourcesContent":["import Konva from \"konva\"\n\nconst getZones = (group, alt) => {\n    let sizes={\n        'corner': [49,52.2],\n        'center': [42.5,42.5],\n\n    }\n    let zones=[];\n    let targetRect \n    let position \n    let width \n    let height \n    let persons_width \n    let persons_height\n    let zns_cnt\n    let x\n    let y\n    let rotate\n\n    group.children.forEach(canvas_element => {\n            if(canvas_element.className=='Rect'){\n                targetRect =canvas_element.getClientRect()\n                position = [targetRect.x,targetRect.y]\n                width = targetRect.width\n                height = targetRect.height\n                persons_width = Math.round((width-18)/42)\n                persons_height = Math.round((height-18)/42)\n                let zns_cnt= 2*persons_width+2*persons_height+3\n                for (let i=0;i<=zns_cnt;i++){\n                    let corners=[\n                        0,\n                        persons_width+1,\n                        persons_width+persons_height+2,\n                        2*persons_width+persons_height+3,\n                    ]\n                    let contr_rect={\n                        x:position[0]-39,\n                        y:position[1]-39,\n                        width:width+78,\n                        height: height+78, \n                    }\n\n                    if(corners.indexOf(i)!=-1){\n                        let corner\n                        if (i==corners[0]){\n                            x = contr_rect.x\n                            y= contr_rect.y\n                            rotate=270\n                            corner = 0\n                            if (alt == true){\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width:sizes['corner'][0],\n                                    height:sizes['corner'][1],\n                                    type:0,\n                                    rotate:0,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                    mirrored: true,\n                                    align:'end',\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width: 0,\n                                    height:0,\n                                    type:1,\n                                })\n\n                            }else {\n                                zones.push({\n                                    x:x+sizes['corner'][0]/2,\n                                    y:y,\n                                    width:sizes['corner'][0]/2,\n                                    height:sizes['center'][1],\n                                    type:0,\n                                    rotate:0,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                    mirrored: true,\n                                    align:'end',\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y+sizes['corner'][1]/2,\n                                    width:sizes['center'][1],\n                                    height: sizes['corner'][0]/2,\n                                    type:0,\n                                    rotate:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                            }\n                        } else if (i==corners[1]){\n                            x= contr_rect.x+contr_rect.width-sizes['corner'][0]\n                            y= contr_rect.y\n                            rotate=0\n                            corner = 1\n                            if (alt == true){\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width:sizes['corner'][0],\n                                    height:sizes['corner'][1],\n                                    type:0,\n                                    rotate:0,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width: 0,\n                                    height:0,\n                                    type:1,\n                                })\n\n                            } else {\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width:sizes['corner'][0]/2,\n                                    height:sizes['center'][1],\n                                    type:0,\n                                    rotate:0,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x+4,\n                                    y:y+sizes['corner'][1]/2,\n                                    width:sizes['center'][1],\n                                    height: sizes['corner'][0]/2,\n                                    type:0,\n                                    rotate:90,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                    mirrored: true,\n                                    align:'end',\n                                })\n                            }\n                        } else if (i==corners[2]){\n                            x= contr_rect.x+contr_rect.width-sizes['corner'][0]\n                            y= contr_rect.y + contr_rect.height -sizes['corner'][1]+2.5\n                            rotate=90\n                            corner = 2\n\n                            if (alt == true){\n                                zones.push({\n                                    x:x+4,\n                                    y:y,\n                                    width:sizes['corner'][0],\n                                    height: sizes['corner'][1],\n                                    type:0,\n                                    rotate:90,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width: 0,\n                                    height:0,\n                                    type:1,\n                                })\n                            } else {\n                                zones.push({\n                                    x:x+4,\n                                    y:y,\n                                    width:sizes['center'][1],\n                                    height: sizes['corner'][0]/2,\n                                    type:0,\n                                    rotate:90,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y+4,\n                                    width:sizes['corner'][0]/2,\n                                    height:sizes['center'][1],\n                                    type:0,\n                                    rotate:180,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                    mirrored: true,\n                                })\n                            }\n                        } else if (i==corners[3]){\n                            x= contr_rect.x\n                            y= contr_rect.y + contr_rect.height -sizes['corner'][1]+2.5\n                            rotate=180\n                            corner = 3\n\n                            if (alt == true){\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width:sizes['corner'][0],\n                                    height: sizes['corner'][1],\n                                    type:0,\n                                    rotate:180,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width: 0,\n                                    height:0,\n                                    type:1,\n                                })\n                            } else {\n                                zones.push({\n                                    x:x+sizes['corner'][0]/2,\n                                    y:y,\n                                    width:sizes['center'][1]/2,\n                                    height: sizes['corner'][0],\n                                    type:0,\n                                    rotate:180,\n                                    rotate_:rotate,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                })\n                                zones.push({\n                                    x:x,\n                                    y:y,\n                                    width:sizes['corner'][0],\n                                    height:sizes['center'][1]/2,\n                                    type:0,\n                                    rotate:270,\n                                    parent:canvas_element._id,\n                                    corner: corner,\n                                    mirrored: true,\n                                })\n                            }\n                        }\n\n                        \n                    } else {\n                        let quarter;\n                        if (i<corners[1]){\n                            x=contr_rect.x+sizes['corner'][0]+(i-1)*sizes['center'][0]\n                            y=contr_rect.y\n                            rotate=0\n                            quarter = 0\n                        } else if (i>corners[1] && i<corners[2]){\n                            let cnt=1;\n                            while(true){//центральных вставок до текущего элемента на стороне\n                                if(i-cnt==corners[1]){\n                                    break;\n                                } else {\n                                    cnt++\n                                }\n                                \n                            } \n                            x=contr_rect.x+contr_rect.width - sizes['center'][0]+3\n                            \n                            y=contr_rect.y+sizes['corner'][1]+(cnt-1)*sizes['center'][1]\n                            rotate=90\n                            quarter = 1\n                        } else if (i>corners[2] && i<corners[3]){\n                            let cnt=1;\n                            while(true){//центральных вставок до текущего элемента на стороне\n                                if(i-cnt==corners[2]){\n                                    break;\n                                } else {\n                                    cnt++\n                                }\n                                \n                            } \n                            x=contr_rect.x+contr_rect.width-sizes['corner'][0]-(cnt)*sizes['center'][0]-0.25\n                            //contr_rect.x+sizes['corner'][0]+(i-1)*sizes['center'][0]\n                            y=contr_rect.y+contr_rect.height - sizes['center'][1] +5.5 //position[1]+height+0.5 //\n         \n                            rotate=180\n                            quarter = 2\n                        } else if (i>corners[3]){\n                            let cnt=1;\n                            while(true){//центральных вставок до текущего элемента на стороне\n                                if(i-cnt==corners[3]){\n                                    break;\n                                } else {\n                                    cnt++\n                                }\n                                \n                            } \n                            x=contr_rect.x-3.5\n                            y=contr_rect.y+sizes['corner'][1]+(cnt-1)*sizes['center'][0]-0.6\n                            rotate=270\n                            quarter = 3\n                        }\n                        if (alt==true) {\n                            zones.push({\n                                x:x,\n                                y:y,\n                                width: sizes['center'][1],\n                                height:sizes['center'][0],\n                                type:1,\n                                rotate:rotate,\n                                parent:canvas_element._id,\n                                corner: false,\n                                quarter: quarter,\n                                second: false,\n                                mirrored:(quarter==0||quarter==1)?false:true,\n                            })\n                            zones.push({\n                                x:x,\n                                y:y,\n                                width: 0,\n                                height:0,\n                                type:1,\n                            })\n                        } else {\n                            zones.push({\n                                x:x,\n                                y:y,\n                                width: (quarter==0||quarter==2)?sizes['center'][1]/2:sizes['center'][1],\n                                height: (quarter==1||quarter==3)?sizes['center'][1]/2:sizes['center'][0],\n                                type:1,\n                                rotate:rotate,\n                                parent:canvas_element._id,\n                                corner: false,\n                                quarter: quarter,\n                                second: false,\n                                mirrored:(quarter==0||quarter==1)?false:true,\n                            })\n                            zones.push({\n                                x:(quarter==0||quarter==2)?x+ sizes['center'][1]/2:x,\n                                y:(quarter==1||quarter==3)?y+ sizes['center'][0]/2:y,\n                                width: (quarter==0||quarter==2)?sizes['center'][1]/2:sizes['center'][1],\n                                height: (quarter==1||quarter==3)?sizes['center'][1]/2:sizes['center'][0],\n                                type:1,\n                                rotate:rotate,\n                                parent:canvas_element._id,\n                                corner: false,\n                                quarter: quarter,\n                                mirrored:(quarter==0||quarter==1)?true:false,\n                                second: true,\n                            })\n                        }\n                    }\n                }\n            }\n        })\n\n    return zones;\n}\nconst rotatePoint = ({ x, y }, rad) => {\n    const rcos = Math.cos(rad);\n    const rsin = Math.sin(rad);\n    return { x: x * rcos - y * rsin, y: y * rcos + x * rsin };\n};\n\nconst rotateAroundCenter = (node, rotation) => {\n    //current rotation origin (0, 0) relative to desired origin - center (node.width()/2, node.height()/2)\n    const topLeft = { x: -node.width() / 2, y: -node.height() / 2 };\n    const current = rotatePoint(topLeft, Konva.getAngle(node.rotation()));\n    const rotated = rotatePoint(topLeft, Konva.getAngle(rotation));\n    const dx = rotated.x - current.x,\n    dy = rotated.y - current.y;\n    node.rotation(rotation);\n    node.x(node.x() + dx);\n    node.y(node.y() + dy); \n}\n\nconst furnitureNew = (layer,callback, zones) => {\n    let zone_id\n    let furniture_id\n    let furnitures ={}\n    //чистим все зоны и пересечения\n    layer.children.forEach((child)=> {\n        if (child.attrs.type == \"child\") {\n            console.log('child')\n            //console.log(child.attrs.zoneId)\n            //console.log(child.attrs.id)\n            if (child.attrs.zoneId!=undefined)\n            furnitures[child.attrs.zoneId] = child.attrs.id\n        }\n        if (child.attrs.type == \"zone\") {\n            zone_id = child.attrs.id\n            child.destroy()\n        } else {\n            if (child.attrs.type == \"temproary\") {\n                furniture_id = child.attrs.id\n            }\n        }\n    })\n\n    if (zone_id!=null){\n        furnitures[zone_id] = furniture_id\n    }\n    callback(furnitures)\n}\n\nconst drawSvg = (file, position, scale, rotation, layer, actions, zones, id, type, callback, zoneId) => {\n    var imageObj = new Image();\n   \n    imageObj.onload = function () {\n        \n        var yoda = new Konva.Image({\n            x: position[0],\n            y: position[1],\n            image: imageObj,\n            width: this.width*scale,\n            height: this.height*scale,\n            draggable: true,\n            id: id,\n            type: type!=undefined?type:\"child\",\n            zoneId: zoneId\n        });\n        yoda.zIndex(1)\n\n        // add the shape to the layer\n        yoda.on('mouseover', function() {\n            document.body.style.cursor = 'pointer';\n        });\n        yoda.on('mouseout', function() {\n            document.body.style.cursor = 'default';\n        });\n        if (actions) {\n            yoda.on('dragstart', ()=>{\n                if(yoda.attrs.type!=\"child\"){\n                    drawSvg(file, position, scale, rotation, layer, true, zones, id)\n                } else {\n                    yoda.destroy()\n                    furnitureNew(layer, callback, zones)\n                }\n                yoda.off('dragstart')\n                yoda.attrs.type=\"temproary\"\n            })\n            \n            if (yoda.attrs.type==\"child\"){\n                yoda.on('click', ()=>{\n                    yoda.destroy()\n                    furnitureNew(layer, callback, zones)\n                })\n                yoda.on('mouseover', ()=>{\n                    yoda.stroke('red')\n                    layer.draw()\n                })\n                yoda.on('mouseout', ()=>{\n                    yoda.stroke('transparent')\n                    layer.draw()\n                })\n            }\n        }\n        yoda.on('dragend', () => {\n            furnitureNew(layer, callback, zones)\n        })\n        yoda.on('dragmove', () => {\n            //чистим все\n            layer.children.forEach((child)=> {\n                if (child.attrs.type == \"zone\") {\n                    child.destroy()\n                }\n            })\n\n            //отсюда получаем список всех пересечений\n            let childSh = []\n            zones.forEach((child) => {\n                if (child === yoda) {\n                    return;\n                }\n                if (haveIntersection(child, yoda.getClientRect())) {\n                    childSh.push(child)\n                } \n                try{\n                    child.fill('transparent')\n                } catch(e){}\n                \n            })\n\n            //здесь находим более близкое пересечение и заливаем\n            if (childSh.length>0){\n                let prefSelect = null\n                childSh.forEach((childSel) =>{\n                    if (prefSelect==null) {\n                        prefSelect = childSel\n                    } else {\n                        let curs = yoda.getClientRect()\n                        let newSel = childSel\n                        let prefSel = prefSelect\n                        if (curs.x - prefSel.x + curs.y - prefSel.y > curs.x - newSel.x + curs.y - newSel.y) {\n                            prefSelect = childSel\n                        }\n                    }\n                })\n                try{\n                    let i = 0\n                    zones.forEach((zone) => {\n                        if (zone ==prefSelect) {\n                            drawRect(prefSelect.height, prefSelect.width, prefSelect.x, prefSelect.y, layer, i)\n                        }\n                        i++\n                    })\n                    \n                } catch(e){}\n            }\n            \n        })\n        layer.add(yoda)\n        \n        layer.draw()\n        if(rotation!=null){\n            rotateAroundCenter(yoda,rotation);\n        }\n    };\n    if (file.indexOf('/')==-1)\n        imageObj.src = process.env.PUBLIC_URL + '/png/'+file \n    else\n        imageObj.src = file\n    \n}\n\nconst drawTable = (position, persons_width, persons_height, name, draggable, layer, containerSize) =>{\n\n    let width = persons_width*42 + 18;\n    let height = persons_height*42 + 18;\n\n    var group = new Konva.Group({\n        draggable: false,\n        type: 'table',\n    })\n    \n    //столик\n    var rect = new Konva.Rect({\n        x: position[0]+((containerSize.width - width) /2),\n        y: position[1]+((containerSize.height - height-40) /2),\n        width: width,\n        height: height,\n        fill: '#67b17a',\n        stroke: '#4c835a',\n        strokeWidth: 2.5,\n        cornerRadius:10,\n        opacity:0.9,\n    });\n    \n    group.add(rect)\n    \n    layer.add(group)\n   \n    layer.draw()\n\n    return group  \n}\n\nconst drawRect = (height, width, x, y, layer, id) =>{\n\n    var group = new Konva.Group({\n        draggable: false,\n        \n    })\n    \n    //столик\n    var rect = new Konva.Rect({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: '#67b17a',\n        opacity:0.9,\n        type: 'zone',\n        id: id\n    });\n    \n    layer.add(rect)\n    layer.draw()\n\n    return group  \n}\n\nconst haveIntersection = (r1, r2) => {\n    return !(\n      r2.x > r1.x + r1.width ||\n      r2.x + r2.width < r1.x ||\n      r2.y > r1.y + r1.height ||\n      r2.y + r2.height < r1.y\n    );\n  }\n\n\n\nconst drawTableWithFurniture = (icon, name, layer, furnitures, containerSize,callback) => {\n    if(typeof icon.position_xy === \"string\" && icon.position_xy.length>0){\n        icon.position_xy = JSON.parse(icon.position_xy)\n        icon.furnitures = JSON.parse(icon.furnitures)\n    }\n    let group = drawTable([0, 0], icon.width_cnt,  icon.height_cnt, name, true, layer, containerSize);\n    let zones = getZones(group, false)\n    \n    let zones_tmp = getZones(group, false)\n            let sizes={\n                'corner': [49,52.2],\n                'center': [42.5,42.5],\n            }\n            let targetRect\n            let position\n            let width\n            let height\n            zones_tmp.forEach((zone, i)=> {\n                if (zone.corner!==false){\n                    if (!zone.rotate_ && zone.rotate_!==0){\n                        zone.width=0\n                        zone.height=0\n                    }  else {\n                        group.children.forEach(element => {\n                            if(element.className=='Rect'){\n                                targetRect = element.getClientRect()\n                                position = [targetRect.x,targetRect.y]\n                                \n                            }\n                        })\n                        let contr_rect={\n                            x:position[0]-39,\n                            y:position[1]-39,\n                            width:width+78,\n                            height: height+78, \n                        }\n                        width = targetRect.width\n                        height = targetRect.height\n                        if (zone.corner==0){\n                            zone.x = contr_rect.x\n                            zone.y= contr_rect.y\n                            zone.width=sizes['corner'][0]\n                            zone.height=sizes['corner'][1]\n                            zone.rotate = zone.rotate_\n                        } else if (zone.corner==1){\n                            zone.x= contr_rect.x+contr_rect.width-sizes['corner'][0]\n                            zone.y= contr_rect.y\n                            zone.width=sizes['corner'][0]\n                            zone.height=sizes['corner'][1]\n                            zone.rotate = zone.rotate_\n\n      \n                        } else if (zone.corner==2){\n                            zone.x= contr_rect.x+contr_rect.width-sizes['corner'][0]\n                            zone.y= contr_rect.y + contr_rect.height -sizes['corner'][1]+2.5\n                            zone.width=sizes['corner'][0]\n                            zone.height=sizes['corner'][1]\n                            zone.rotate = zone.rotate_\n                        } else if (zone.corner==3){\n                            zone.x= contr_rect.x\n                            zone.y= contr_rect.y + contr_rect.height -sizes['corner'][1]+2.5\n                            zone.width=sizes['corner'][0]\n                            zone.height=sizes['corner'][1]\n                            zone.rotate = zone.rotate_\n                        }\n                    }\n                } else if(zone.second===true){\n                    zone.width=0\n                    zone.height=0\n                } else if (zone.second===false && (zone.quarter==0||zone.quarter==2)){\n                    zone.width=sizes['center'][0]\n                } else {\n                    zone.height=sizes['center'][1]\n                }\n            })\n            \n    if (Object.keys(icon.furnitures).length > 0){\n        Object.keys(icon.furnitures).forEach((index)=> {\n            let furniture_keys = Object.keys(furnitures)\n            for (let i=0;i<furniture_keys.length; i++) {\n                \n                let furniture = furnitures[furniture_keys[i]]\n                if (furniture.ID == icon.furnitures[index]){\n                    //drawSvg( process.env.PUBLIC_URL+'/img/furnitures/'+furniture.ID+'/'+furniture.image_vacant, [zones[index].x,zones[index].y], 0.2, zones[index].rotate==0?null:zones[index].rotate, group);\n                    if (furniture.ID!=3){\n                        //file, position, scale, rotation, layer, actions, zones, id, type, callback\n                        drawSvg( '/public/furnitures/'+furniture.ID+'/1.png', [zones_tmp[index].x,zones_tmp[index].y], 0.2, zones[index].corner!==false?zones[index].rotate_:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                    }else {\n                        let target_width= 18.2\n                        let target_height = 35.6\n                        if(zones[index].corner!==false){ //тут для угловых частей\n                            if (zones[index].mirrored){\n                                if (zones[index].align=='end'){\n                                    if (zones[index].corner==1 && !zones[index].rotate_){\n                                        drawSvg('/public/furnitures/'+furniture.ID+'/1r.png', [zones[index].x+zones[index].width -target_width-7,zones[index].y-4.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                    }else if (zones[index].corner === 0){\n                                        //левый верхний второй\n                                        drawSvg('/public/furnitures/'+furniture.ID+'/1r.png', [zones[index].x+zones[index].width -target_width-0.5,zones[index].y+0.3], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                    }  else {\n                                        drawSvg('/public/furnitures/'+furniture.ID+'/1r.png', [zones[index].x+zones[index].width -target_width,zones[index].y-1.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                    }\n                                } else {\n                                    if (zones[index].corner==2 && !zones[index].rotate_){\n                                        //правый нижний второй\n                                        drawSvg('/public/furnitures/'+furniture.ID+'/1r.png', [zones[index].x,zones[index].y+zones[index].height-target_height+2], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                    } if (zones[index].corner==3 && !zones[index].rotate_) {\n                                        //левый нижний второй\n                                        drawSvg('/public/furnitures/'+furniture.ID+'/1r.png', [zones[index].x+8.5,zones[index].y+zones[index].height-target_height+5.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                    }\n                                }\n                            } else {\n                                if(zones[index].corner==2 && zones[index].rotate_){\n                                    //нижний правый первый\n                                    drawSvg('/public/furnitures/'+furniture.ID+'/1.png', [zones[index].x+zones[index].width-target_width-7 ,zones[index].y+zones[index].height-target_height+3], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                } else if(zones[index].corner==3 && zones[index].rotate_){\n                                    //нижний левый первый\n                                    drawSvg('/public/furnitures/'+furniture.ID+'/1.png', [zones[index].x+zones[index].width-target_width+3,zones[index].y+zones[index].height-target_height-0.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }else if (zones[index].corner === 0){\n                                    //левый верхний второ\n                                    drawSvg('/public/furnitures/'+furniture.ID+'/1.png', [zones[index].x+8.5,zones[index].y-5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                } else {\n                                    drawSvg( '/public/furnitures/'+furniture.ID+'/1.png', [zones[index].x,zones[index].y], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }\n                            }\n                        } else { //тут для центральных частей\n                            \n                            let image = '/public/furnitures/'+furniture.ID+'/1.png'\n                            \n                            if (zones[index].mirrored) {\n                                image = image.replace('.png','r.png')\n                            }\n                            \n                            if (zones[index].quarter===0){\n                                if (zones[index].mirrored){\n                                    drawSvg(image, [zones[index].x+zones[index].width-target_width,zones[index].y+0.2], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }else {\n                                    drawSvg(image, [zones[index].x,zones[index].y+0.2], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }\n                            } else if (zones[index].quarter==1 || zones[index].quarter==3){\n                                if (zones[index].second==false){\n                                    drawSvg(image, [zones[index].x+11.8,zones[index].y+zones[index].height -target_height+2.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                } else {\n                                    drawSvg(image, [zones[index].x+11.8,zones[index].y+zones[index].height -target_height+5.5], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }\n                            }  else if ((zones[index].quarter==2)){\n                                if (zones[index].second==false){\n                                    drawSvg(image, [zones[index].x-1,zones[index].y+0.2], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                } else {\n                                    drawSvg(image, [zones[index].x+3,zones[index].y+0.2], 0.2, zones[index].rotate==0?null:zones[index].rotate, layer, true, zones, furniture.ID, \"child\", callback, index);\n                                }\n                            } \n                        }\n                        \n                    }\n                    break\n                }\n            }\n        })\n        /*if (icon.attrs!=''){\n            group.setAttrs(JSON.parse(icon.attrs))\n            layer.draw()\n        }*/\n        setTimeout(()=>{\n            layer.draw()\n        },100)\n        \n    }\n\n    return group\n\n    \n    \n}\n\nexport {\n    getZones,\n    rotateAroundCenter,\n    drawSvg,\n    drawTable,\n    drawRect,\n    haveIntersection,\n    drawTableWithFurniture\n}"]},"metadata":{},"sourceType":"module"}