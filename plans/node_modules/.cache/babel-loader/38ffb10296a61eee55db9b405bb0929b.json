{"ast":null,"code":"var _jsxFileName = \"/Users/laurkankusu/Documents/development/domains-server/admin/src/components/app/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { withApiService } from \"../hoc\";\nimport SideMenu from \"../../components/side-menu\";\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from 'js-cookie';\nimport \"./app.css\";\nimport { Spinner } from \"../spinner\";\nimport { bindActionCreators } from 'redux';\nimport { compose } from '../../utils';\nimport { checkAuth } from \"../../actions\";\nimport ApiService from \"../../services/api-service\";\nimport { LoginPage } from \"../pages\";\nimport ToolBar from \"../tool-bar\";\nimport DomainsPage from \"../pages/domains/list\";\nimport DomainDetail from \"../pages/domains/detail\";\nimport DomainEdit from \"../pages/domains/edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    auth,\n    phone,\n    checkAuth\n  } = _ref;\n  const location = useLocation().pathname;\n  const history = useNavigate();\n\n  if (location == \"/logout\") {\n    let apiService = new ApiService();\n    apiService.logout();\n    history.replace(\"/\");\n  }\n\n  console.log(auth);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  if (auth == null) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  } else if (auth == false) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToolBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(DomainEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/add\",\n          element: /*#__PURE__*/_jsxDEV(DomainEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/:id\",\n          element: /*#__PURE__*/_jsxDEV(DomainDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/*\",\n          element: /*#__PURE__*/_jsxDEV(DomainsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(App, \"lE9A8Pz91oyr5rDrgjG4tdnh7uQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = App;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authStatus: {\n      auth,\n      phone,\n      loading,\n      error\n    }\n  } = _ref2;\n  return {\n    auth,\n    phone\n  }; //\n};\n\nconst mapDispatchToProps = (dispatch, _ref3) => {\n  let {\n    apiService\n  } = _ref3;\n  return bindActionCreators({\n    checkAuth: checkAuth(apiService)\n  }, dispatch);\n};\n\nexport default compose(withApiService(), connect(mapStateToProps, mapDispatchToProps))(App);\n/*<Navbar />\n              <SideMenu />}*/\n\n/*<Routes>\n    <Route path=\"/off-days\" component={ReservePreventPage} exact />\n    <Route path=\"/clients/blocked\" component={BlackListPage} exact />\n    <Route path=\"/objects\" component={ObjectsPage} exact/>\n    <Route path=\"/objects/:objectID\" component={ObjectDetail} exact/>\n    <Route path=\"/halls/list\" component={Halls} exact/>\n    <Route path=\"/halls/panoramas\" component={Panoramas} exact/>\n    <Route path=\"/halls/schemes\" component={Schemes} exact/>\n    <Route path=\"/employees\" component={ EmployeesPage} exact/>\n    <Route path=\"/services\" component={Services} exact/>\n    <Route path=\"/actions\" component={ActionsPage} exact/>\n    <Route path=\"/photos\" component={PhotosPage}/>\n<Route path=\"/\" component={Dashboard}/>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/components/app/app.js"],"names":["React","useEffect","Route","Routes","withApiService","SideMenu","connect","useLocation","useNavigate","jwt_decode","Cookies","Spinner","bindActionCreators","compose","checkAuth","ApiService","LoginPage","ToolBar","DomainsPage","DomainDetail","DomainEdit","App","auth","phone","location","pathname","history","apiService","logout","replace","console","log","mapStateToProps","authStatus","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport {Route, Routes} from \"react-router-dom\"\nimport {withApiService} from \"../hoc\"\nimport SideMenu from \"../../components/side-menu\"\nimport { connect } from 'react-redux';\nimport {useLocation, useNavigate} from \"react-router-dom\"\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from 'js-cookie';\nimport \"./app.css\"\nimport { Spinner } from \"../spinner\"\nimport { bindActionCreators } from 'redux';\nimport { compose } from '../../utils';\nimport { checkAuth } from \"../../actions\"\nimport ApiService from \"../../services/api-service\"\nimport { LoginPage } from \"../pages\";\nimport ToolBar from \"../tool-bar\";\nimport DomainsPage from \"../pages/domains/list\";\nimport DomainDetail from \"../pages/domains/detail\";\nimport DomainEdit from \"../pages/domains/edit\";\n\nconst App = ({ auth, phone, checkAuth}) => {\n    const location = useLocation().pathname;\n    const history = useNavigate()\n    if (location == \"/logout\") {\n        let apiService = new ApiService()\n        apiService.logout()\n        history.replace(\"/\")\n    }\n    console.log(auth)\n    useEffect(()=>{\n        checkAuth()\n    },[])\n\n    \n\n    if (auth == null) {\n        return <Spinner />\n    } else if(auth==false){\n        return (\n            <Routes>\n                <Route path=\"*\" element={<LoginPage />} ></Route>\n            </Routes>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <ToolBar />\n                <SideMenu />\n                <Routes>\n                    <Route path=\"/admin/edit/:id\" element={<DomainEdit />} />\n                    <Route path=\"/admin/add\" element={<DomainEdit />} />\n                    <Route path=\"/admin/:id\" element={<DomainDetail />} />\n                    <Route path=\"/admin/*\" element={<DomainsPage />} />\n                </Routes>\n            </React.Fragment>\n        )        \n    }\n}\n\nconst mapStateToProps = ({ authStatus: { auth, phone, loading, error }}) => {\n    return { auth, phone }; //\n};\n\nconst mapDispatchToProps = (dispatch, { apiService}) => {\n    return bindActionCreators({\n        checkAuth: checkAuth(apiService)\n    }, dispatch);\n};\n\nexport default compose(\n    withApiService(),\n    connect(mapStateToProps, mapDispatchToProps)\n  )(App)\n\n  /*<Navbar />\n                <SideMenu />}*/\n                /*<Routes>\n                    <Route path=\"/off-days\" component={ReservePreventPage} exact />\n                    <Route path=\"/clients/blocked\" component={BlackListPage} exact />\n                    <Route path=\"/objects\" component={ObjectsPage} exact/>\n                    <Route path=\"/objects/:objectID\" component={ObjectDetail} exact/>\n                    <Route path=\"/halls/list\" component={Halls} exact/>\n                    <Route path=\"/halls/panoramas\" component={Panoramas} exact/>\n                    <Route path=\"/halls/schemes\" component={Schemes} exact/>\n                    <Route path=\"/employees\" component={ EmployeesPage} exact/>\n                    <Route path=\"/services\" component={Services} exact/>\n                    <Route path=\"/actions\" component={ActionsPage} exact/>\n                    <Route path=\"/photos\" component={PhotosPage}/>\n        <Route path=\"/\" component={Dashboard}/>*/"]},"metadata":{},"sourceType":"module"}