{"ast":null,"code":"const loginRequested = () => {\n  return {\n    type: 'FETCH_LOGIN_REQUEST'\n  };\n};\n\nconst loginSuccess = () => {\n  return {\n    type: 'FETCH_LOGIN_SUCCESS'\n  };\n};\n\nconst loginError = error => {\n  return {\n    type: 'FETCH_LOGIN_ERROR',\n    payload: error\n  };\n};\n\nconst notAuthorized = () => {\n  return {\n    type: 'NOT_AUTHORIZED'\n  };\n};\n\nconst fetchLogin = apiService => _ref => {\n  let {\n    login,\n    pass\n  } = _ref;\n  return dispatch => {\n    dispatch(loginRequested());\n    apiService.login(phone, pass).then(data => dispatch(loginSuccess(data))).catch(err => dispatch(loginError(err.response.data.Message)));\n  };\n};\n\nconst fetchLogout = apiService => () => dispatch => {\n  dispatch(loginRequested());\n  apiService.logout().then(() => dispatch(notAuthorized())).catch(() => {\n    dispatch(loginSuccess());\n  });\n};\n\nconst checkAuth = apiService => () => dispatch => {\n  dispatch(loginRequested());\n  apiService.ping().then(data => dispatch(loginSuccess(data))).catch(() => {\n    dispatch(notAuthorized());\n  });\n};\n\nexport { fetchLogin, fetchLogout, checkAuth };","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/actions/auths.js"],"names":["loginRequested","type","loginSuccess","loginError","error","payload","notAuthorized","fetchLogin","apiService","login","pass","dispatch","phone","then","data","catch","err","response","Message","fetchLogout","logout","checkAuth","ping"],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAM;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGH,CAJD;;AAMA,MAAMC,YAAY,GAAG,MAAM;AACvB,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGH,CAJD;;AAMA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLH,IAAAA,IAAI,EAAE,mBADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAIH,CALD;;AAOA,MAAME,aAAa,GAAG,MAAM;AACxB,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGH,CAJD;;AASA,MAAMM,UAAU,GAAIC,UAAD,IAAgB;AAAA,MAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD;AAAA,SAAoBC,QAAD,IAAc;AAChEA,IAAAA,QAAQ,CAACX,cAAc,EAAf,CAAR;AACAQ,IAAAA,UAAU,CAACC,KAAX,CAAiBG,KAAjB,EAAuBF,IAAvB,EACGG,IADH,CACSC,IAAD,IAAUH,QAAQ,CAACT,YAAY,CAACY,IAAD,CAAb,CAD1B,EAEGC,KAFH,CAEUC,GAAD,IAASL,QAAQ,CAACR,UAAU,CAACa,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,OAAnB,CAAX,CAF1B;AAGH,GALkC;AAAA,CAAnC;;AAOA,MAAMC,WAAW,GAAIX,UAAD,IAAgB,MAAOG,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAACX,cAAc,EAAf,CAAR;AACAQ,EAAAA,UAAU,CAACY,MAAX,GACGP,IADH,CACQ,MAAMF,QAAQ,CAACL,aAAa,EAAd,CADtB,EAEGS,KAFH,CAES,MAAI;AAACJ,IAAAA,QAAQ,CAACT,YAAY,EAAb,CAAR;AAAyB,GAFvC;AAGD,CALD;;AAQA,MAAMmB,SAAS,GAAIb,UAAD,IAAgB,MAAOG,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAACX,cAAc,EAAf,CAAR;AACAQ,EAAAA,UAAU,CAACc,IAAX,GACGT,IADH,CACSC,IAAD,IAAUH,QAAQ,CAACT,YAAY,CAACY,IAAD,CAAb,CAD1B,EAEGC,KAFH,CAES,MAAI;AAACJ,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AAA0B,GAFxC;AAGD,CALD;;AAOA,SACIC,UADJ,EAEIY,WAFJ,EAGIE,SAHJ","sourcesContent":["const loginRequested = () => {\n    return {\n      type: 'FETCH_LOGIN_REQUEST'\n    };\n};\n  \nconst loginSuccess = () => {\n    return {\n      type: 'FETCH_LOGIN_SUCCESS',\n    };\n};\n  \nconst loginError = (error) => {\n    return {\n      type: 'FETCH_LOGIN_ERROR',\n      payload: error\n    };\n};\n\nconst notAuthorized = () => {\n    return {\n      type: 'NOT_AUTHORIZED'\n    }\n}\n\n\n\n\nconst fetchLogin = (apiService) => ({login, pass}) => (dispatch) => {\n    dispatch(loginRequested());\n    apiService.login(phone,pass)\n      .then((data) => dispatch(loginSuccess(data)))\n      .catch((err) => dispatch(loginError(err.response.data.Message)));\n};\n\nconst fetchLogout = (apiService) => () => (dispatch) => {\n  dispatch(loginRequested());\n  apiService.logout()\n    .then(() => dispatch(notAuthorized()))\n    .catch(()=>{dispatch(loginSuccess())});\n};\n\n\nconst checkAuth = (apiService) => () => (dispatch) => {\n  dispatch(loginRequested());\n  apiService.ping()\n    .then((data) => dispatch(loginSuccess(data)))\n    .catch(()=>{dispatch(notAuthorized())});\n};\n\nexport {\n    fetchLogin,\n    fetchLogout,\n    checkAuth,\n}"]},"metadata":{},"sourceType":"module"}