{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { toFileWithPath } from './file';\nvar FILES_TO_IGNORE = [// Thumbnail cache files for macOS and Windows\n'.DS_Store', 'Thumbs.db' // Windows\n];\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n *\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\n * and a list of File objects will be returned.\n *\n * @param evt\n */\n\nexport function fromEvent(evt) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (isObject(evt) && isDataTransfer(evt)) {\n        return [2\n        /*return*/\n        , getDataTransferFiles(evt.dataTransfer, evt.type)];\n      } else if (isChangeEvt(evt)) {\n        return [2\n        /*return*/\n        , getInputFiles(evt)];\n      } else if (Array.isArray(evt) && evt.every(function (item) {\n        return 'getFile' in item && typeof item.getFile === 'function';\n      })) {\n        return [2\n        /*return*/\n        , getFsHandleFiles(evt)];\n      }\n\n      return [2\n      /*return*/\n      , []];\n    });\n  });\n}\n\nfunction isDataTransfer(value) {\n  return isObject(value.dataTransfer);\n}\n\nfunction isChangeEvt(value) {\n  return isObject(value) && isObject(value.target);\n}\n\nfunction isObject(v) {\n  return typeof v === 'object' && v !== null;\n}\n\nfunction getInputFiles(evt) {\n  return fromList(evt.target.files).map(function (file) {\n    return toFileWithPath(file);\n  });\n} // Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\n\n\nfunction getFsHandleFiles(handles) {\n  return __awaiter(this, void 0, void 0, function () {\n    var files;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all(handles.map(function (h) {\n            return h.getFile();\n          }))];\n\n        case 1:\n          files = _a.sent();\n          return [2\n          /*return*/\n          , files.map(function (file) {\n            return toFileWithPath(file);\n          })];\n      }\n    });\n  });\n}\n\nfunction getDataTransferFiles(dt, type) {\n  return __awaiter(this, void 0, void 0, function () {\n    var items, files;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (dt === null) {\n            return [2\n            /*return*/\n            , []];\n          }\n\n          if (!dt.items) return [3\n          /*break*/\n          , 2];\n          items = fromList(dt.items).filter(function (item) {\n            return item.kind === 'file';\n          }); // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n          // only 'dragstart' and 'drop' has access to the data (source node)\n\n          if (type !== 'drop') {\n            return [2\n            /*return*/\n            , items];\n          }\n\n          return [4\n          /*yield*/\n          , Promise.all(items.map(toFilePromises))];\n\n        case 1:\n          files = _a.sent();\n          return [2\n          /*return*/\n          , noIgnoredFiles(flatten(files))];\n\n        case 2:\n          return [2\n          /*return*/\n          , noIgnoredFiles(fromList(dt.files).map(function (file) {\n            return toFileWithPath(file);\n          }))];\n      }\n    });\n  });\n}\n\nfunction noIgnoredFiles(files) {\n  return files.filter(function (file) {\n    return FILES_TO_IGNORE.indexOf(file.name) === -1;\n  });\n} // IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\n\n\nfunction fromList(items) {\n  if (items === null) {\n    return [];\n  }\n\n  var files = []; // tslint:disable: prefer-for-of\n\n  for (var i = 0; i < items.length; i++) {\n    var file = items[i];\n    files.push(file);\n  }\n\n  return files;\n} // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\n\n\nfunction toFilePromises(item) {\n  if (typeof item.webkitGetAsEntry !== 'function') {\n    return fromDataTransferItem(item);\n  }\n\n  var entry = item.webkitGetAsEntry(); // Safari supports dropping an image node from a different window and can be retrieved using\n  // the DataTransferItem.getAsFile() API\n  // NOTE: FileSystemEntry.file() throws if trying to get the file\n\n  if (entry && entry.isDirectory) {\n    return fromDirEntry(entry);\n  }\n\n  return fromDataTransferItem(item);\n}\n\nfunction flatten(items) {\n  return items.reduce(function (acc, files) {\n    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);\n  }, []);\n}\n\nfunction fromDataTransferItem(item) {\n  var file = item.getAsFile();\n\n  if (!file) {\n    return Promise.reject(item + \" is not a File\");\n  }\n\n  var fwp = toFileWithPath(file);\n  return Promise.resolve(fwp);\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\n\n\nfunction fromEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];\n    });\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\n\n\nfunction fromDirEntry(entry) {\n  var reader = entry.createReader();\n  return new Promise(function (resolve, reject) {\n    var entries = [];\n\n    function readEntries() {\n      var _this = this; // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n      // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n\n\n      reader.readEntries(function (batch) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var files, err_1, items;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!!batch.length) return [3\n                /*break*/\n                , 5];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , Promise.all(entries)];\n\n              case 2:\n                files = _a.sent();\n                resolve(files);\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                err_1 = _a.sent();\n                reject(err_1);\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                items = Promise.all(batch.map(fromEntry));\n                entries.push(items); // Continue reading\n\n                readEntries();\n                _a.label = 6;\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, function (err) {\n        reject(err);\n      });\n    }\n\n    readEntries();\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\n\n\nfunction fromFileEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new Promise(function (resolve, reject) {\n        entry.file(function (file) {\n          var fwp = toFileWithPath(file, entry.fullPath);\n          resolve(fwp);\n        }, function (err) {\n          reject(err);\n        });\n      })];\n    });\n  });\n}","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/node_modules/file-selector/src/file-selector.ts"],"names":[],"mappings":"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","sourcesContent":["import {FileWithPath, toFileWithPath} from './file';\n\n\nconst FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store', // macOs\n    'Thumbs.db'  // Windows\n];\n\n\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n *\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\n * and a list of File objects will be returned.\n *\n * @param evt\n */\nexport async function fromEvent(evt: Event | any): Promise<(FileWithPath | DataTransferItem)[]> {\n    if (isObject<DragEvent>(evt) && isDataTransfer(evt)) {\n        return getDataTransferFiles(evt.dataTransfer, evt.type);\n    } else if (isChangeEvt(evt)) {\n        return getInputFiles(evt);\n    } else if (Array.isArray(evt) && evt.every(item => 'getFile' in item && typeof item.getFile === 'function')) {\n        return getFsHandleFiles(evt)\n    }\n    return [];\n}\n\nfunction isDataTransfer(value: any): value is DataTransfer {\n    return isObject(value.dataTransfer);\n}\n\nfunction isChangeEvt(value: any): value is Event {\n    return isObject<Event>(value) && isObject(value.target);\n}\n\nfunction isObject<T>(v: any): v is T {\n    return typeof v === 'object' && v !== null\n}\n\nfunction getInputFiles(evt: Event) {\n    return fromList<FileWithPath>((evt.target as HTMLInputElement).files).map(file => toFileWithPath(file));\n}\n\n// Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\nasync function getFsHandleFiles(handles: any[]) {\n    const files = await Promise.all(handles.map(h => h.getFile()));\n    return files.map(file => toFileWithPath(file));\n}\n\n\nasync function getDataTransferFiles(dt: DataTransfer | null, type: string) {\n    if (dt === null) {\n        return [];\n    }\n\n    // IE11 does not support dataTransfer.items\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items#Browser_compatibility\n    if (dt.items) {\n        const items = fromList<DataTransferItem>(dt.items)\n            .filter(item => item.kind === 'file');\n        // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n        // only 'dragstart' and 'drop' has access to the data (source node)\n        if (type !== 'drop') {\n            return items;\n        }\n        const files = await Promise.all(items.map(toFilePromises));\n        return noIgnoredFiles(flatten<FileWithPath>(files));\n    }\n\n    return noIgnoredFiles(fromList<FileWithPath>(dt.files)\n        .map(file => toFileWithPath(file)));\n}\n\nfunction noIgnoredFiles(files: FileWithPath[]) {\n    return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\n\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList<T>(items: DataTransferItemList | FileList | null): T[] {\n    if (items === null) {\n        return [];\n    }\n\n    const files = [];\n\n    // tslint:disable: prefer-for-of\n    for (let i = 0; i < items.length; i++) {\n        const file = items[i];\n        files.push(file);\n    }\n\n    return files as any;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item: DataTransferItem) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n\n    const entry = item.webkitGetAsEntry();\n\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry) as any;\n    }\n\n    return fromDataTransferItem(item);\n}\n\nfunction flatten<T>(items: any[]): T[] {\n    return items.reduce((acc, files) => [\n        ...acc,\n        ...(Array.isArray(files) ? flatten(files) : [files])\n    ], []);\n}\n\nfunction fromDataTransferItem(item: DataTransferItem) {\n    const file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(`${item} is not a File`);\n    }\n    const fwp = toFileWithPath(file);\n    return Promise.resolve(fwp);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nasync function fromEntry(entry: any) {\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry: any) {\n    const reader = entry.createReader();\n\n    return new Promise<FileArray[]>((resolve, reject) => {\n        const entries: Promise<FileValue[]>[] = [];\n\n        function readEntries() {\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(async (batch: any[]) => {\n                if (!batch.length) {\n                    // Done reading directory\n                    try {\n                        const files = await Promise.all(entries);\n                        resolve(files);\n                    } catch (err) {\n                        reject(err);\n                    }\n                } else {\n                    const items = Promise.all(batch.map(fromEntry));\n                    entries.push(items);\n\n                    // Continue reading\n                    readEntries();\n                }\n            }, (err: any) => {\n                reject(err);\n            });\n        }\n\n        readEntries();\n    });\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nasync function fromFileEntry(entry: any) {\n    return new Promise<FileWithPath>((resolve, reject) => {\n        entry.file((file: FileWithPath) => {\n            const fwp = toFileWithPath(file, entry.fullPath);\n            resolve(fwp);\n        }, (err: any) => {\n            reject(err);\n        });\n    });\n}\n\n// Infinite type recursion\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\ninterface FileArray extends Array<FileValue> {}\ntype FileValue = FileWithPath\n    | FileArray[];\n"]},"metadata":{},"sourceType":"module"}