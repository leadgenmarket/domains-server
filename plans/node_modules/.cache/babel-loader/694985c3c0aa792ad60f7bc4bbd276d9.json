{"ast":null,"code":"var _excluded = [\"children\"],\n    _excluded2 = [\"open\"],\n    _excluded3 = [\"refKey\", \"role\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"],\n    _excluded4 = [\"refKey\", \"onChange\", \"onClick\"];\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint prefer-template: 0 */\n\n\nimport React, { forwardRef, Fragment, useCallback, useEffect, useImperativeHandle, useMemo, useReducer, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fromEvent } from \"file-selector\";\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, filePickerOptionsTypes, canUseFileSystemAccessAPI, isEvtWithFiles, isIeOrEdge, isPropagationStopped, onDocumentDragOver, TOO_MANY_FILES_REJECTION } from \"./utils/index\";\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, _excluded2);\n\n  useImperativeHandle(ref, function () {\n    return {\n      open: open\n    };\n  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return /*#__PURE__*/React.createElement(Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {\n    open: open\n  })));\n});\nDropzone.displayName = \"Dropzone\"; // Add default props for react-docgen\n\nvar defaultProps = {\n  disabled: false,\n  getFilesFromEvent: fromEvent,\n  maxSize: Infinity,\n  minSize: 0,\n  multiple: true,\n  maxFiles: 0,\n  preventDropOnDocument: true,\n  noClick: false,\n  noKeyboard: false,\n  noDrag: false,\n  noDragEventsBubbling: false,\n  validator: null,\n  useFsAccessApi: true\n};\nDropzone.defaultProps = defaultProps;\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.draggedFiles Files in active drag\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * If true, disables click to open the native file selection dialog\n   */\n  noClick: PropTypes.bool,\n\n  /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */\n  noKeyboard: PropTypes.bool,\n\n  /**\n   * If true, disables drag 'n' drop\n   */\n  noDrag: PropTypes.bool,\n\n  /**\n   * If true, stops drag event propagation to parents\n   */\n  noDragEventsBubbling: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Maximum accepted number of files\n   * The default value is 0 which means there is no limitation to how many files are accepted.\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when opening the file dialog\n   */\n  onFileDialogOpen: PropTypes.func,\n\n  /**\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\n   */\n  useFsAccessApi: PropTypes.bool,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are dropped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func,\n\n  /**\n   * Custom validation function\n   * @param {File} file\n   * @returns {FileError|FileError[]}\n   */\n  validator: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state and some helper functions.\n *\n * @typedef {object} DropzoneState\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} draggedFiles Files in active drag\n * @property {File[]} acceptedFiles Accepted files\n * @property {FileRejection[]} fileRejections Rejected files and why they were rejected\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  draggedFiles: [],\n  acceptedFiles: [],\n  fileRejections: []\n};\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ```jsx\n * function MyDropzone(props) {\n *   const {getRootProps, getInputProps} = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n *\n * @function useDropzone\n *\n * @param {object} props\n * @param {string|string[]} [props.accept] Set accepted file types.\n * See https://github.com/okonet/attr-accept for more information.\n * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n * Windows. In some cases there might not be a mime type set at all.\n * See: https://github.com/react-dropzone/react-dropzone/issues/276\n * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\n * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\n * Note that it also stops tracking the focus state.\n * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\n * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\n * @param {number} [props.minSize=0] Minimum file size (in bytes)\n * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n * @param {boolean} [props.useFsAccessApi] Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n * to open the file picker instead of using an `<input type=\"file\">` click event.\n * @param {Function} [props.onFileDialogOpen] Cb for when opening the file dialog\n * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n *\n * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n * If `multiple` is set to false and additional files are dropped,\n * all files besides the first will be rejected.\n * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n *\n * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n *\n * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n *\n * ```js\n * function onDrop(acceptedFiles) {\n *   const req = request.post('/upload')\n *   acceptedFiles.forEach(file => {\n *     req.attach(file.name, file)\n *   })\n *   req.end(callback)\n * }\n * ```\n * @param {dropAcceptedCb} [props.onDropAccepted]\n * @param {dropRejectedCb} [props.onDropRejected]\n *\n * @returns {DropzoneState}\n */\n\nexport function useDropzone() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _defaultProps$options = _objectSpread(_objectSpread({}, defaultProps), options),\n      accept = _defaultProps$options.accept,\n      disabled = _defaultProps$options.disabled,\n      getFilesFromEvent = _defaultProps$options.getFilesFromEvent,\n      maxSize = _defaultProps$options.maxSize,\n      minSize = _defaultProps$options.minSize,\n      multiple = _defaultProps$options.multiple,\n      maxFiles = _defaultProps$options.maxFiles,\n      onDragEnter = _defaultProps$options.onDragEnter,\n      onDragLeave = _defaultProps$options.onDragLeave,\n      onDragOver = _defaultProps$options.onDragOver,\n      onDrop = _defaultProps$options.onDrop,\n      onDropAccepted = _defaultProps$options.onDropAccepted,\n      onDropRejected = _defaultProps$options.onDropRejected,\n      onFileDialogCancel = _defaultProps$options.onFileDialogCancel,\n      onFileDialogOpen = _defaultProps$options.onFileDialogOpen,\n      useFsAccessApi = _defaultProps$options.useFsAccessApi,\n      preventDropOnDocument = _defaultProps$options.preventDropOnDocument,\n      noClick = _defaultProps$options.noClick,\n      noKeyboard = _defaultProps$options.noKeyboard,\n      noDrag = _defaultProps$options.noDrag,\n      noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling,\n      validator = _defaultProps$options.validator;\n\n  var onFileDialogOpenCb = useMemo(function () {\n    return typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop;\n  }, [onFileDialogOpen]);\n  var onFileDialogCancelCb = useMemo(function () {\n    return typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop;\n  }, [onFileDialogCancel]);\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive,\n      draggedFiles = state.draggedFiles; // Update file dialog active state when the window is focused on\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: \"closeDialog\"\n            });\n            onFileDialogCancelCb();\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    if (useFsAccessApi && canUseFileSystemAccessAPI()) {\n      return function () {};\n    }\n\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return function () {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, useFsAccessApi]);\n  var dragTargetsRef = useRef([]);\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    dragTargetsRef.current = [];\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\n      document.addEventListener(\"drop\", onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener(\"dragover\", onDocumentDragOver);\n        document.removeEventListener(\"drop\", onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        dispatch({\n          draggedFiles: draggedFiles,\n          isDragActive: true,\n          type: \"setDraggedFiles\"\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      });\n    }\n  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event);\n    var hasFiles = isEvtWithFiles(event);\n\n    if (hasFiles && event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (hasFiles && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver, noDragEventsBubbling]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\n\n    var targets = dragTargetsRef.current.filter(function (target) {\n      return rootRef.current && rootRef.current.contains(target);\n    }); // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n\n    var targetIdx = targets.indexOf(event.target);\n\n    if (targetIdx !== -1) {\n      targets.splice(targetIdx, 1);\n    }\n\n    dragTargetsRef.current = targets;\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      isDragActive: false,\n      type: \"setDraggedFiles\",\n      draggedFiles: []\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, onDragLeave, noDragEventsBubbling]);\n  var setFiles = useCallback(function (files, event) {\n    var acceptedFiles = [];\n    var fileRejections = [];\n    files.forEach(function (file) {\n      var _fileAccepted = fileAccepted(file, accept),\n          _fileAccepted2 = _slicedToArray(_fileAccepted, 2),\n          accepted = _fileAccepted2[0],\n          acceptError = _fileAccepted2[1];\n\n      var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\n          _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2),\n          sizeMatch = _fileMatchSize2[0],\n          sizeError = _fileMatchSize2[1];\n\n      var customErrors = validator ? validator(file) : null;\n\n      if (accepted && sizeMatch && !customErrors) {\n        acceptedFiles.push(file);\n      } else {\n        var errors = [acceptError, sizeError];\n\n        if (customErrors) {\n          errors = errors.concat(customErrors);\n        }\n\n        fileRejections.push({\n          file: file,\n          errors: errors.filter(function (e) {\n            return e;\n          })\n        });\n      }\n    });\n\n    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\n      // Reject everything and empty accepted files\n      acceptedFiles.forEach(function (file) {\n        fileRejections.push({\n          file: file,\n          errors: [TOO_MANY_FILES_REJECTION]\n        });\n      });\n      acceptedFiles.splice(0);\n    }\n\n    dispatch({\n      acceptedFiles: acceptedFiles,\n      fileRejections: fileRejections,\n      type: \"setFiles\"\n    });\n\n    if (onDrop) {\n      onDrop(acceptedFiles, fileRejections, event);\n    }\n\n    if (fileRejections.length > 0 && onDropRejected) {\n      onDropRejected(fileRejections, event);\n    }\n\n    if (acceptedFiles.length > 0 && onDropAccepted) {\n      onDropAccepted(acceptedFiles, event);\n    }\n  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [];\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        setFiles(files, event);\n      });\n    }\n\n    dispatch({\n      type: \"reset\"\n    });\n  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]); // Fn for opening the file dialog programmatically\n\n  var openFileDialog = useCallback(function () {\n    if (useFsAccessApi && canUseFileSystemAccessAPI()) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb(); // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n\n      var opts = {\n        multiple: multiple,\n        types: filePickerOptionsTypes(accept)\n      };\n      window.showOpenFilePicker(opts).then(function (handles) {\n        return getFilesFromEvent(handles);\n      }).then(function (files) {\n        return setFiles(files, null);\n      }).catch(function (e) {\n        return onFileDialogCancelCb(e);\n      }).finally(function () {\n        return dispatch({\n          type: \"closeDialog\"\n        });\n      });\n      return;\n    }\n\n    if (inputRef.current) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb();\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, inputRef, openFileDialog]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: \"focus\"\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: \"blur\"\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    if (noClick) {\n      return;\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n\n\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [inputRef, noClick, openFileDialog]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  var composeDragHandler = function composeDragHandler(fn) {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  var stopPropagation = function stopPropagation(event) {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? \"ref\" : _ref2$refKey,\n          role = _ref2.role,\n          onKeyDown = _ref2.onKeyDown,\n          onFocus = _ref2.onFocus,\n          onBlur = _ref2.onBlur,\n          onClick = _ref2.onClick,\n          onDragEnter = _ref2.onDragEnter,\n          onDragOver = _ref2.onDragOver,\n          onDragLeave = _ref2.onDragLeave,\n          onDrop = _ref2.onDrop,\n          rest = _objectWithoutProperties(_ref2, _excluded3);\n\n      return _objectSpread(_objectSpread(_defineProperty({\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb)),\n        role: typeof role === \"string\" && role !== \"\" ? role : \"button\"\n      }, refKey, rootRef), !disabled && !noKeyboard ? {\n        tabIndex: 0\n      } : {}), rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? \"ref\" : _ref3$refKey,\n          onChange = _ref3.onChange,\n          onClick = _ref3.onClick,\n          rest = _objectWithoutProperties(_ref3, _excluded4);\n\n      var inputProps = _defineProperty({\n        accept: accept,\n        multiple: multiple,\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        autoComplete: \"off\",\n        tabIndex: -1\n      }, refKey, inputRef);\n\n      return _objectSpread(_objectSpread({}, inputProps), rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\n  var fileCount = draggedFiles.length;\n  var isDragAccept = fileCount > 0 && allFilesAccepted({\n    files: draggedFiles,\n    accept: accept,\n    minSize: minSize,\n    maxSize: maxSize,\n    multiple: multiple,\n    maxFiles: maxFiles\n  });\n  var isDragReject = fileCount > 0 && !isDragAccept;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject,\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case \"focus\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: true\n      });\n\n    case \"blur\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: false\n      });\n\n    case \"openDialog\":\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        isFileDialogActive: true\n      });\n\n    case \"closeDialog\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFileDialogActive: false\n      });\n\n    case \"setDraggedFiles\":\n      /* eslint no-case-declarations: 0 */\n      var isDragActive = action.isDragActive,\n          draggedFiles = action.draggedFiles;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        draggedFiles: draggedFiles,\n        isDragActive: isDragActive\n      });\n\n    case \"setFiles\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        acceptedFiles: action.acceptedFiles,\n        fileRejections: action.fileRejections\n      });\n\n    case \"reset\":\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n}\n\nfunction noop() {}\n\nexport { ErrorCode } from \"./utils\";","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/plans/node_modules/react-dropzone/dist/es/index.js"],"names":["_excluded","_excluded2","_excluded3","_excluded4","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","forwardRef","Fragment","useCallback","useEffect","useImperativeHandle","useMemo","useReducer","useRef","PropTypes","fromEvent","allFilesAccepted","composeEventHandlers","fileAccepted","fileMatchSize","filePickerOptionsTypes","canUseFileSystemAccessAPI","isEvtWithFiles","isIeOrEdge","isPropagationStopped","onDocumentDragOver","TOO_MANY_FILES_REJECTION","Dropzone","_ref","ref","children","params","_useDropzone","useDropzone","open","props","createElement","displayName","defaultProps","disabled","getFilesFromEvent","maxSize","Infinity","minSize","multiple","maxFiles","preventDropOnDocument","noClick","noKeyboard","noDrag","noDragEventsBubbling","validator","useFsAccessApi","propTypes","func","accept","oneOfType","string","arrayOf","bool","number","onFileDialogCancel","onFileDialogOpen","onDragEnter","onDragLeave","onDragOver","onDrop","onDropAccepted","onDropRejected","initialState","isFocused","isFileDialogActive","isDragActive","isDragAccept","isDragReject","draggedFiles","acceptedFiles","fileRejections","options","undefined","_defaultProps$options","onFileDialogOpenCb","noop","onFileDialogCancelCb","rootRef","inputRef","_useReducer","reducer","_useReducer2","state","dispatch","onWindowFocus","setTimeout","current","files","type","window","addEventListener","removeEventListener","dragTargetsRef","onDocumentDrop","event","contains","preventDefault","document","onDragEnterCb","persist","stopPropagation","concat","Promise","resolve","then","onDragOverCb","hasFiles","dataTransfer","dropEffect","_unused","onDragLeaveCb","targets","targetIdx","splice","setFiles","file","_fileAccepted","_fileAccepted2","accepted","acceptError","_fileMatchSize","_fileMatchSize2","sizeMatch","sizeError","customErrors","errors","e","onDropCb","openFileDialog","opts","types","showOpenFilePicker","handles","catch","finally","click","onKeyDownCb","isEqualNode","keyCode","onFocusCb","onBlurCb","onClickCb","composeHandler","fn","composeKeyboardHandler","composeDragHandler","getRootProps","_ref2","_ref2$refKey","refKey","role","onKeyDown","onFocus","onBlur","onClick","rest","tabIndex","onInputElementClick","getInputProps","_ref3","_ref3$refKey","onChange","inputProps","style","display","autoComplete","fileCount","action","ErrorCode"],"mappings":"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AS,CAAC6C,IA/ED;;AAiFnB;AACF;AACA;AACA;AACA;AACEnB,EAAAA,iBAAiB,EAAE1B,SAAS,CAACwC,IAtFV;;AAwFnB;AACF;AACA;AACEO,EAAAA,kBAAkB,EAAE/C,SAAS,CAACwC,IA3FX;;AA6FnB;AACF;AACA;AACEQ,EAAAA,gBAAgB,EAAEhD,SAAS,CAACwC,IAhGT;;AAkGnB;AACF;AACA;AACA;AACEF,EAAAA,cAAc,EAAEtC,SAAS,CAAC6C,IAtGP;;AAwGnB;AACF;AACA;AACA;AACA;AACEI,EAAAA,WAAW,EAAEjD,SAAS,CAACwC,IA7GJ;;AA+GnB;AACF;AACA;AACA;AACA;AACEU,EAAAA,WAAW,EAAElD,SAAS,CAACwC,IApHJ;;AAsHnB;AACF;AACA;AACA;AACA;AACEW,EAAAA,UAAU,EAAEnD,SAAS,CAACwC,IA3HH;;AA6HnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEY,EAAAA,MAAM,EAAEpD,SAAS,CAACwC,IA3JC;;AA6JnB;AACF;AACA;AACA;AACA;AACA;AACA;AACEa,EAAAA,cAAc,EAAErD,SAAS,CAACwC,IApKP;;AAsKnB;AACF;AACA;AACA;AACA;AACA;AACA;AACEc,EAAAA,cAAc,EAAEtD,SAAS,CAACwC,IA7KP;;AA+KnB;AACF;AACA;AACA;AACA;AACEH,EAAAA,SAAS,EAAErC,SAAS,CAACwC;AApLF,CAArB;AAsLA,eAAe3B,QAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sourcesContent":["var _excluded = [\"children\"],\n    _excluded2 = [\"open\"],\n    _excluded3 = [\"refKey\", \"role\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"],\n    _excluded4 = [\"refKey\", \"onChange\", \"onClick\"];\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint prefer-template: 0 */\nimport React, { forwardRef, Fragment, useCallback, useEffect, useImperativeHandle, useMemo, useReducer, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fromEvent } from \"file-selector\";\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, filePickerOptionsTypes, canUseFileSystemAccessAPI, isEvtWithFiles, isIeOrEdge, isPropagationStopped, onDocumentDragOver, TOO_MANY_FILES_REJECTION } from \"./utils/index\";\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, _excluded2);\n\n  useImperativeHandle(ref, function () {\n    return {\n      open: open\n    };\n  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return /*#__PURE__*/React.createElement(Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {\n    open: open\n  })));\n});\nDropzone.displayName = \"Dropzone\"; // Add default props for react-docgen\n\nvar defaultProps = {\n  disabled: false,\n  getFilesFromEvent: fromEvent,\n  maxSize: Infinity,\n  minSize: 0,\n  multiple: true,\n  maxFiles: 0,\n  preventDropOnDocument: true,\n  noClick: false,\n  noKeyboard: false,\n  noDrag: false,\n  noDragEventsBubbling: false,\n  validator: null,\n  useFsAccessApi: true\n};\nDropzone.defaultProps = defaultProps;\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.draggedFiles Files in active drag\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * If true, disables click to open the native file selection dialog\n   */\n  noClick: PropTypes.bool,\n\n  /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */\n  noKeyboard: PropTypes.bool,\n\n  /**\n   * If true, disables drag 'n' drop\n   */\n  noDrag: PropTypes.bool,\n\n  /**\n   * If true, stops drag event propagation to parents\n   */\n  noDragEventsBubbling: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Maximum accepted number of files\n   * The default value is 0 which means there is no limitation to how many files are accepted.\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when opening the file dialog\n   */\n  onFileDialogOpen: PropTypes.func,\n\n  /**\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\n   */\n  useFsAccessApi: PropTypes.bool,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are dropped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func,\n\n  /**\n   * Custom validation function\n   * @param {File} file\n   * @returns {FileError|FileError[]}\n   */\n  validator: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state and some helper functions.\n *\n * @typedef {object} DropzoneState\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} draggedFiles Files in active drag\n * @property {File[]} acceptedFiles Accepted files\n * @property {FileRejection[]} fileRejections Rejected files and why they were rejected\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  draggedFiles: [],\n  acceptedFiles: [],\n  fileRejections: []\n};\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ```jsx\n * function MyDropzone(props) {\n *   const {getRootProps, getInputProps} = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n *\n * @function useDropzone\n *\n * @param {object} props\n * @param {string|string[]} [props.accept] Set accepted file types.\n * See https://github.com/okonet/attr-accept for more information.\n * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n * Windows. In some cases there might not be a mime type set at all.\n * See: https://github.com/react-dropzone/react-dropzone/issues/276\n * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\n * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\n * Note that it also stops tracking the focus state.\n * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\n * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\n * @param {number} [props.minSize=0] Minimum file size (in bytes)\n * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n * @param {boolean} [props.useFsAccessApi] Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n * to open the file picker instead of using an `<input type=\"file\">` click event.\n * @param {Function} [props.onFileDialogOpen] Cb for when opening the file dialog\n * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n *\n * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n * If `multiple` is set to false and additional files are dropped,\n * all files besides the first will be rejected.\n * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n *\n * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n *\n * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n *\n * ```js\n * function onDrop(acceptedFiles) {\n *   const req = request.post('/upload')\n *   acceptedFiles.forEach(file => {\n *     req.attach(file.name, file)\n *   })\n *   req.end(callback)\n * }\n * ```\n * @param {dropAcceptedCb} [props.onDropAccepted]\n * @param {dropRejectedCb} [props.onDropRejected]\n *\n * @returns {DropzoneState}\n */\n\nexport function useDropzone() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _defaultProps$options = _objectSpread(_objectSpread({}, defaultProps), options),\n      accept = _defaultProps$options.accept,\n      disabled = _defaultProps$options.disabled,\n      getFilesFromEvent = _defaultProps$options.getFilesFromEvent,\n      maxSize = _defaultProps$options.maxSize,\n      minSize = _defaultProps$options.minSize,\n      multiple = _defaultProps$options.multiple,\n      maxFiles = _defaultProps$options.maxFiles,\n      onDragEnter = _defaultProps$options.onDragEnter,\n      onDragLeave = _defaultProps$options.onDragLeave,\n      onDragOver = _defaultProps$options.onDragOver,\n      onDrop = _defaultProps$options.onDrop,\n      onDropAccepted = _defaultProps$options.onDropAccepted,\n      onDropRejected = _defaultProps$options.onDropRejected,\n      onFileDialogCancel = _defaultProps$options.onFileDialogCancel,\n      onFileDialogOpen = _defaultProps$options.onFileDialogOpen,\n      useFsAccessApi = _defaultProps$options.useFsAccessApi,\n      preventDropOnDocument = _defaultProps$options.preventDropOnDocument,\n      noClick = _defaultProps$options.noClick,\n      noKeyboard = _defaultProps$options.noKeyboard,\n      noDrag = _defaultProps$options.noDrag,\n      noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling,\n      validator = _defaultProps$options.validator;\n\n  var onFileDialogOpenCb = useMemo(function () {\n    return typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop;\n  }, [onFileDialogOpen]);\n  var onFileDialogCancelCb = useMemo(function () {\n    return typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop;\n  }, [onFileDialogCancel]);\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive,\n      draggedFiles = state.draggedFiles; // Update file dialog active state when the window is focused on\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: \"closeDialog\"\n            });\n            onFileDialogCancelCb();\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    if (useFsAccessApi && canUseFileSystemAccessAPI()) {\n      return function () {};\n    }\n\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return function () {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, useFsAccessApi]);\n  var dragTargetsRef = useRef([]);\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    dragTargetsRef.current = [];\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\n      document.addEventListener(\"drop\", onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener(\"dragover\", onDocumentDragOver);\n        document.removeEventListener(\"drop\", onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        dispatch({\n          draggedFiles: draggedFiles,\n          isDragActive: true,\n          type: \"setDraggedFiles\"\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      });\n    }\n  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event);\n    var hasFiles = isEvtWithFiles(event);\n\n    if (hasFiles && event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (hasFiles && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver, noDragEventsBubbling]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\n\n    var targets = dragTargetsRef.current.filter(function (target) {\n      return rootRef.current && rootRef.current.contains(target);\n    }); // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n\n    var targetIdx = targets.indexOf(event.target);\n\n    if (targetIdx !== -1) {\n      targets.splice(targetIdx, 1);\n    }\n\n    dragTargetsRef.current = targets;\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      isDragActive: false,\n      type: \"setDraggedFiles\",\n      draggedFiles: []\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, onDragLeave, noDragEventsBubbling]);\n  var setFiles = useCallback(function (files, event) {\n    var acceptedFiles = [];\n    var fileRejections = [];\n    files.forEach(function (file) {\n      var _fileAccepted = fileAccepted(file, accept),\n          _fileAccepted2 = _slicedToArray(_fileAccepted, 2),\n          accepted = _fileAccepted2[0],\n          acceptError = _fileAccepted2[1];\n\n      var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\n          _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2),\n          sizeMatch = _fileMatchSize2[0],\n          sizeError = _fileMatchSize2[1];\n\n      var customErrors = validator ? validator(file) : null;\n\n      if (accepted && sizeMatch && !customErrors) {\n        acceptedFiles.push(file);\n      } else {\n        var errors = [acceptError, sizeError];\n\n        if (customErrors) {\n          errors = errors.concat(customErrors);\n        }\n\n        fileRejections.push({\n          file: file,\n          errors: errors.filter(function (e) {\n            return e;\n          })\n        });\n      }\n    });\n\n    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\n      // Reject everything and empty accepted files\n      acceptedFiles.forEach(function (file) {\n        fileRejections.push({\n          file: file,\n          errors: [TOO_MANY_FILES_REJECTION]\n        });\n      });\n      acceptedFiles.splice(0);\n    }\n\n    dispatch({\n      acceptedFiles: acceptedFiles,\n      fileRejections: fileRejections,\n      type: \"setFiles\"\n    });\n\n    if (onDrop) {\n      onDrop(acceptedFiles, fileRejections, event);\n    }\n\n    if (fileRejections.length > 0 && onDropRejected) {\n      onDropRejected(fileRejections, event);\n    }\n\n    if (acceptedFiles.length > 0 && onDropAccepted) {\n      onDropAccepted(acceptedFiles, event);\n    }\n  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [];\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        setFiles(files, event);\n      });\n    }\n\n    dispatch({\n      type: \"reset\"\n    });\n  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]); // Fn for opening the file dialog programmatically\n\n  var openFileDialog = useCallback(function () {\n    if (useFsAccessApi && canUseFileSystemAccessAPI()) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb(); // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n\n      var opts = {\n        multiple: multiple,\n        types: filePickerOptionsTypes(accept)\n      };\n      window.showOpenFilePicker(opts).then(function (handles) {\n        return getFilesFromEvent(handles);\n      }).then(function (files) {\n        return setFiles(files, null);\n      }).catch(function (e) {\n        return onFileDialogCancelCb(e);\n      }).finally(function () {\n        return dispatch({\n          type: \"closeDialog\"\n        });\n      });\n      return;\n    }\n\n    if (inputRef.current) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb();\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, inputRef, openFileDialog]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: \"focus\"\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: \"blur\"\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    if (noClick) {\n      return;\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n\n\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [inputRef, noClick, openFileDialog]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  var composeDragHandler = function composeDragHandler(fn) {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  var stopPropagation = function stopPropagation(event) {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? \"ref\" : _ref2$refKey,\n          role = _ref2.role,\n          onKeyDown = _ref2.onKeyDown,\n          onFocus = _ref2.onFocus,\n          onBlur = _ref2.onBlur,\n          onClick = _ref2.onClick,\n          onDragEnter = _ref2.onDragEnter,\n          onDragOver = _ref2.onDragOver,\n          onDragLeave = _ref2.onDragLeave,\n          onDrop = _ref2.onDrop,\n          rest = _objectWithoutProperties(_ref2, _excluded3);\n\n      return _objectSpread(_objectSpread(_defineProperty({\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb)),\n        role: typeof role === \"string\" && role !== \"\" ? role : \"button\"\n      }, refKey, rootRef), !disabled && !noKeyboard ? {\n        tabIndex: 0\n      } : {}), rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? \"ref\" : _ref3$refKey,\n          onChange = _ref3.onChange,\n          onClick = _ref3.onClick,\n          rest = _objectWithoutProperties(_ref3, _excluded4);\n\n      var inputProps = _defineProperty({\n        accept: accept,\n        multiple: multiple,\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        autoComplete: \"off\",\n        tabIndex: -1\n      }, refKey, inputRef);\n\n      return _objectSpread(_objectSpread({}, inputProps), rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\n  var fileCount = draggedFiles.length;\n  var isDragAccept = fileCount > 0 && allFilesAccepted({\n    files: draggedFiles,\n    accept: accept,\n    minSize: minSize,\n    maxSize: maxSize,\n    multiple: multiple,\n    maxFiles: maxFiles\n  });\n  var isDragReject = fileCount > 0 && !isDragAccept;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject,\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case \"focus\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: true\n      });\n\n    case \"blur\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: false\n      });\n\n    case \"openDialog\":\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        isFileDialogActive: true\n      });\n\n    case \"closeDialog\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFileDialogActive: false\n      });\n\n    case \"setDraggedFiles\":\n      /* eslint no-case-declarations: 0 */\n      var isDragActive = action.isDragActive,\n          draggedFiles = action.draggedFiles;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        draggedFiles: draggedFiles,\n        isDragActive: isDragActive\n      });\n\n    case \"setFiles\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        acceptedFiles: action.acceptedFiles,\n        fileRejections: action.fileRejections\n      });\n\n    case \"reset\":\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n}\n\nfunction noop() {}\n\nexport { ErrorCode } from \"./utils\";"]},"metadata":{},"sourceType":"module"}