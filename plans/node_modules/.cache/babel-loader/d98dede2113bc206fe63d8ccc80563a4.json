{"ast":null,"code":"var domainsRequested=function domainsRequested(){return{type:'DOMIANS_REQUESTED'};};var domainsRequestSuccess=function domainsRequestSuccess(domains){return{type:'DOMIANS_FETCH_SUCCESS',payload:domains};};var domainsRequestMoreSuccess=function domainsRequestMoreSuccess(domains){return{type:'DOMAINS_GET_MORE',payload:domains};};var domainsRequestError=function domainsRequestError(){return{type:'DOMIANS_FETCH_ERROR'};};var domainsRequestMoreError=function domainsRequestMoreError(){return{type:'DOMIANS_FETCH_MORE_ERROR'};};var deleteDomainAction=function deleteDomainAction(id){return{type:'DOMAINS_DELETE_ONE',payload:id};};var addDomainToList=function addDomainToList(domain){return{type:'DOMAINS_ADD_ONE',payload:domain};};var removeDomainFromList=function removeDomainFromList(id){return{type:'DOMAINS_REMOVE_ONE',payload:id};};var fetchDomains=function fetchDomains(apiService){return function(searchUrl,cursor,itemscnt){return function(dispatch){dispatch(domainsRequested);apiService.domainsList(searchUrl,cursor,itemscnt).then(function(response){return dispatch(domainsRequestSuccess(response.data));}).catch(function(err){return dispatch(domainsRequestError(err));});};};};var fetchMore=function fetchMore(apiService){return function(searchUrl,cursor,itemscnt){return function(dispatch){dispatch(domainsRequested);apiService.domainsList(searchUrl,cursor,itemscnt).then(function(response){return dispatch(domainsRequestMoreSuccess(response.data));}).catch(function(err){dispatch(domainsRequestMoreError(err));});};};};var deleteDomain=function deleteDomain(apiService){return function(id){return function(dispatch){apiService.deleteDomain(id).then(function(response){return dispatch(deleteDomainAction(id));}).catch(function(err){return dispatch(domainsRequestError(err));});};};};export{fetchDomains,addDomainToList,deleteDomain,removeDomainFromList,fetchMore};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/actions/domains.js"],"names":["domainsRequested","type","domainsRequestSuccess","domains","payload","domainsRequestMoreSuccess","domainsRequestError","domainsRequestMoreError","deleteDomainAction","id","addDomainToList","domain","removeDomainFromList","fetchDomains","apiService","searchUrl","cursor","itemscnt","dispatch","domainsList","then","response","data","catch","err","fetchMore","deleteDomain"],"mappings":"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","sourcesContent":["const domainsRequested = () => {\n    return {\n        type: 'DOMIANS_REQUESTED',\n    }\n}\n\nconst domainsRequestSuccess = (domains) => {\n    return {\n        type: 'DOMIANS_FETCH_SUCCESS',\n        payload: domains\n    }\n}\n\nconst domainsRequestMoreSuccess = (domains) => {\n    return {\n        type: 'DOMAINS_GET_MORE',\n        payload: domains\n    }\n}\n\nconst domainsRequestError = () => {\n    return {\n        type: 'DOMIANS_FETCH_ERROR',\n    }\n}\n\nconst domainsRequestMoreError = () => {\n    return {\n        type: 'DOMIANS_FETCH_MORE_ERROR',\n    }\n}\n\n\n\nconst deleteDomainAction = (id) => {\n    return {\n        type: 'DOMAINS_DELETE_ONE',\n        payload: id\n    }\n}\n\nconst addDomainToList = (domain) => {\n    return {\n        type: 'DOMAINS_ADD_ONE',\n        payload: domain\n    }\n}\n\nconst removeDomainFromList = (id) => {\n    return {\n        type: 'DOMAINS_REMOVE_ONE',\n        payload: id\n    }\n}\n\nconst fetchDomains = (apiService) => (searchUrl, cursor, itemscnt) => (dispatch) => {\n    dispatch(domainsRequested)\n    apiService.domainsList(searchUrl, cursor, itemscnt)\n        .then((response) => dispatch(domainsRequestSuccess(response.data)))\n        .catch((err) => dispatch(domainsRequestError(err)))\n}\n\nconst fetchMore = (apiService) => (searchUrl, cursor, itemscnt) => (dispatch) => {\n    dispatch(domainsRequested)\n    apiService.domainsList(searchUrl, cursor, itemscnt)\n        .then((response) => dispatch(domainsRequestMoreSuccess(response.data)))\n        .catch((err) => {\n            dispatch(domainsRequestMoreError(err))\n        })\n}\n\nconst deleteDomain = (apiService) => (id) => (dispatch) => {\n    apiService.deleteDomain(id)\n        .then((response) => dispatch(deleteDomainAction(id)))\n        .catch((err) => dispatch(domainsRequestError(err)))\n}\n\n\n\n\nexport {\n    fetchDomains,\n    addDomainToList,\n    deleteDomain,\n    removeDomainFromList,\n    fetchMore,\n}"]},"metadata":{},"sourceType":"module"}