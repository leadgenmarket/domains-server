{"ast":null,"code":"import _createClass from\"/Users/laurkankusu/Documents/development/domains-server/admin/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/laurkankusu/Documents/development/domains-server/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import axios from\"axios\";var sendFormWithAttach=function sendFormWithAttach(url,form,type){var config={headers:{'content-type':'multipart/form-data'}};var send=new FormData();Object.keys(form).forEach(function(key){if(key==\"files\"){if(form[key].length>1){form[key].forEach(function(el){send.append(\"files\",form[key]);});}else{send.append('file',form[key][0]);}}send.append(key,form[key]);});if(type=='post'){return axios.post(url,send,{headers:{'content-type':'multipart/form-data'}});}else if(type=='put'){return axios.put(url,send,{headers:{'content-type':'multipart/form-data'}});}};var ApiService=/*#__PURE__*/_createClass(function ApiService(){_classCallCheck(this,ApiService);this.login=function(login,pass){console.log(login);console.log(pass);return axios.post(\"/sign-in\",{login:login,pass:pass});};this.ping=function(){return axios.get(\"/api/ping\");};this.logout=function(){return axios.get(\"/api/logout\");};this.domainsList=function(searchUrl,cursor,itemscnt){return axios.post(\"/api/domains/list\",{search:searchUrl,cursor:cursor,items_cnt:itemscnt});};this.leadsList=function(searchUrl,cursor,itemscnt){return axios.post(\"/api/lead/list\",{search:searchUrl,cursor:cursor,items_cnt:itemscnt});};this.domain=function(id){return axios.get(\"/api/domains/\"+id);};this.addDomain=function(){return axios.put(\"/api/domains/\");};this.deleteDomain=function(id){return axios.delete(\"/api/domains/\"+id);};this.templatesList=function(){return axios.get(\"/api/templates/\");};this.citiesList=function(){return axios.get(\"/api/cities/\");};this.organizationsList=function(){return axios.get(\"/api/organizations/\");};this.domainSave=function(data){return axios({url:\"/api/domains/add\",method:\"post\",data:data,headers:{\"Content-Type\":\"multipart/form-data\"}});};this.titlesList=function(){return axios.get(\"/api/titles/\");};this.deleteTitle=function(id){return axios.delete(\"/api/titles/\"+id);};this.updateTilte=function(data){return axios.post(\"/api/titles\",data);};});export{ApiService as default};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/services/api-service.js"],"names":["axios","sendFormWithAttach","url","form","type","config","headers","send","FormData","Object","keys","forEach","key","length","el","append","post","put","ApiService","login","pass","console","log","ping","get","logout","domainsList","searchUrl","cursor","itemscnt","search","items_cnt","leadsList","domain","id","addDomain","deleteDomain","delete","templatesList","citiesList","organizationsList","domainSave","data","method","titlesList","deleteTitle","updateTilte"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nconst sendFormWithAttach = (url, form, type) => {\n    const config = {\n        headers: { 'content-type': 'multipart/form-data' }\n    }\n    const send = new FormData()\n    Object.keys(form).forEach((key) => {\n        if (key == \"files\") {\n            if (form[key].length > 1) {\n                form[key].forEach((el) => {\n                    send.append(\"files\", form[key]);\n                })\n            } else {\n                send.append('file', form[key][0])\n            }\n        }\n        send.append(key, form[key])\n    })\n    if (type == 'post') {\n        return axios.post(url, send, { headers: { 'content-type': 'multipart/form-data' } })\n    } else if (type == 'put') {\n        return axios.put(url, send, { headers: { 'content-type': 'multipart/form-data' } })\n    }\n}\n\nexport default class ApiService {\n    login = (login, pass) => {\n        console.log(login)\n        console.log(pass)\n        return axios.post(\"/sign-in\", { login, pass })\n    }\n\n    ping = () => {\n        return axios.get(\"/api/ping\")\n    }\n\n    logout = () => {\n        return axios.get(\"/api/logout\")\n    }\n\n    domainsList = (searchUrl, cursor, itemscnt) => {\n        return axios.post(\"/api/domains/list\", {\n            search: searchUrl,\n            cursor: cursor,\n            items_cnt: itemscnt,\n        })\n    }\n\n    leadsList = (searchUrl, cursor, itemscnt) => {\n        return axios.post(\"/api/lead/list\", {\n            search: searchUrl,\n            cursor: cursor,\n            items_cnt: itemscnt,\n        })\n    }\n\n    domain = (id) => {\n        return axios.get(\"/api/domains/\" + id)\n    }\n\n    addDomain = () => {\n        return axios.put(\"/api/domains/\")\n    }\n\n    deleteDomain = (id) => {\n        return axios.delete(\"/api/domains/\" + id)\n    }\n\n    templatesList = () => {\n        return axios.get(\"/api/templates/\")\n    }\n\n    citiesList = () => {\n        return axios.get(\"/api/cities/\")\n    }\n\n    organizationsList = () => {\n        return axios.get(\"/api/organizations/\")\n    }\n\n    domainSave = (data) => {\n        return axios({\n            url: \"/api/domains/add\",\n            method: \"post\",\n            data: data,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n    }\n\n    titlesList = () => {\n        return axios.get(\"/api/titles/\")\n    }\n\n    deleteTitle = (id) => {\n        return axios.delete(\"/api/titles/\" + id)\n    }\n\n    updateTilte = (data) => {\n        return axios.post(\"/api/titles\", data)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}