{"ast":null,"code":"const organizationsRequested = () => {\n  return {\n    type: 'ORGANIZATIONS_REQUESTED'\n  };\n};\n\nconst organizationsLoaded = domains => {\n  return {\n    type: 'ORGANIZATIONS_FETCH_SUCCESS',\n    payload: domains\n  };\n};\n\nconst organizationsError = data => {\n  return {\n    type: 'ORGANIZATIONS_ERROR',\n    payload: data\n  };\n};\n\nconst deleteOrganizationAction = id => {\n  return {\n    type: 'ORGANIZATION_DELETE_ONE',\n    payload: id\n  };\n};\n\nconst updateOrganizationAction = data => {\n  return {\n    type: 'ORGANIZATION_UPDATE',\n    payload: data\n  };\n};\n\nconst fetchOrganizations = apiService => () => dispatch => {\n  dispatch(organizationsRequested);\n  apiService.organizationsList().then(response => dispatch(organizationsLoaded(response.data))).catch(err => dispatch(organizationsError(err)));\n};\n\nconst deleteOrganization = apiService => id => dispatch => {\n  apiService.deleteTitle(id).then(response => dispatch(deleteOrganizationAction(id))).catch(err => dispatch(organizationsError(err)));\n};\n\nconst updateOrganization = apiService => data => dispatch => {\n  apiService.updateTilte(data).then(response => dispatch(updateOrganizationAction(response.data))).catch(err => dispatch(organizationsError(err)));\n};\n\nexport { fetchOrganizations, deleteOrganization, updateOrganization };","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/plans/src/actions/organizations.js"],"names":["organizationsRequested","type","organizationsLoaded","domains","payload","organizationsError","data","deleteOrganizationAction","id","updateOrganizationAction","fetchOrganizations","apiService","dispatch","organizationsList","then","response","catch","err","deleteOrganization","deleteTitle","updateOrganization","updateTilte"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMC,mBAAmB,GAAIC,OAAD,IAAa;AACrC,SAAO;AACHF,IAAAA,IAAI,EAAE,6BADH;AAEHG,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAIC,IAAD,IAAU;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAE,qBADH;AAEHG,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,wBAAwB,GAAIC,EAAD,IAAQ;AACrC,SAAO;AACHP,IAAAA,IAAI,EAAE,yBADH;AAEHG,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,wBAAwB,GAAIH,IAAD,IAAU;AACvC,SAAO;AACHL,IAAAA,IAAI,EAAE,qBADH;AAEHG,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMI,kBAAkB,GAAIC,UAAD,IAAgB,MAAOC,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAACZ,sBAAD,CAAR;AACAW,EAAAA,UAAU,CAACE,iBAAX,GACKC,IADL,CACWC,QAAD,IAAcH,QAAQ,CAACV,mBAAmB,CAACa,QAAQ,CAACT,IAAV,CAApB,CADhC,EAEKU,KAFL,CAEYC,GAAD,IAASL,QAAQ,CAACP,kBAAkB,CAACY,GAAD,CAAnB,CAF5B;AAGH,CALD;;AAOA,MAAMC,kBAAkB,GAAIP,UAAD,IAAiBH,EAAD,IAASI,QAAD,IAAc;AAC7DD,EAAAA,UAAU,CAACQ,WAAX,CAAuBX,EAAvB,EACKM,IADL,CACWC,QAAD,IAAcH,QAAQ,CAACL,wBAAwB,CAACC,EAAD,CAAzB,CADhC,EAEKQ,KAFL,CAEYC,GAAD,IAASL,QAAQ,CAACP,kBAAkB,CAACY,GAAD,CAAnB,CAF5B;AAGH,CAJD;;AAMA,MAAMG,kBAAkB,GAAIT,UAAD,IAAiBL,IAAD,IAAWM,QAAD,IAAc;AAC/DD,EAAAA,UAAU,CAACU,WAAX,CAAuBf,IAAvB,EACKQ,IADL,CACWC,QAAD,IAAcH,QAAQ,CAACH,wBAAwB,CAACM,QAAQ,CAACT,IAAV,CAAzB,CADhC,EAEKU,KAFL,CAEYC,GAAD,IAASL,QAAQ,CAACP,kBAAkB,CAACY,GAAD,CAAnB,CAF5B;AAGH,CAJD;;AAMA,SACIP,kBADJ,EAEIQ,kBAFJ,EAGIE,kBAHJ","sourcesContent":["const organizationsRequested = () => {\n    return {\n        type: 'ORGANIZATIONS_REQUESTED',\n    }\n}\n\nconst organizationsLoaded = (domains) => {\n    return {\n        type: 'ORGANIZATIONS_FETCH_SUCCESS',\n        payload: domains\n    }\n}\n\nconst organizationsError = (data) => {\n    return {\n        type: 'ORGANIZATIONS_ERROR',\n        payload: data\n    }\n}\n\nconst deleteOrganizationAction = (id) => {\n    return {\n        type: 'ORGANIZATION_DELETE_ONE',\n        payload: id\n    }\n}\n\nconst updateOrganizationAction = (data) => {\n    return {\n        type: 'ORGANIZATION_UPDATE',\n        payload: data,\n    }\n}\n\nconst fetchOrganizations = (apiService) => () => (dispatch) => {\n    dispatch(organizationsRequested)\n    apiService.organizationsList()\n        .then((response) => dispatch(organizationsLoaded(response.data)))\n        .catch((err) => dispatch(organizationsError(err)))\n}\n\nconst deleteOrganization = (apiService) => (id) => (dispatch) => {\n    apiService.deleteTitle(id)\n        .then((response) => dispatch(deleteOrganizationAction(id)))\n        .catch((err) => dispatch(organizationsError(err)))\n}\n\nconst updateOrganization = (apiService) => (data) => (dispatch) => {\n    apiService.updateTilte(data)\n        .then((response) => dispatch(updateOrganizationAction(response.data)))\n        .catch((err) => dispatch(organizationsError(err)))\n}\n\nexport {\n    fetchOrganizations,\n    deleteOrganization,\n    updateOrganization\n}"]},"metadata":{},"sourceType":"module"}