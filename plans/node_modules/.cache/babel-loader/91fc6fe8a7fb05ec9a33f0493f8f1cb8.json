{"ast":null,"code":"import _createClass from\"/Users/laurkankusu/Documents/development/domains-server/admin/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/laurkankusu/Documents/development/domains-server/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import axios from\"axios\";var sendFormWithAttach=function sendFormWithAttach(url,form,type){var config={headers:{'content-type':'multipart/form-data'}};var send=new FormData();Object.keys(form).forEach(function(key){if(key==\"files\"){if(form[key].length>1){form[key].forEach(function(el){send.append(\"files\",form[key]);});}else{send.append('file',form[key][0]);}}send.append(key,form[key]);});if(type=='post'){return axios.post(url,send,{headers:{'content-type':'multipart/form-data'}});}else if(type=='put'){return axios.put(url,send,{headers:{'content-type':'multipart/form-data'}});}};var ApiService=/*#__PURE__*/_createClass(function ApiService(){_classCallCheck(this,ApiService);this.login=function(login,pass){console.log(login);console.log(pass);return axios.post(\"/sign-in\",{login:login,pass:pass});};this.ping=function(){return axios.get(\"/api/ping\");};this.logout=function(){return axios.get(\"/api/logout\");};this.domainsList=function(){return axios.get(\"/api/domains\");};this.domain=function(id){return axios.get(\"/api/domains/\"+id);};this.addDomain=function(){return axios.put(\"/api/domains/\");};this.deleteDomain=function(id){return axios.delete(\"/api/domains/\"+id);};this.templatesList=function(){return axios.get(\"/api/templates/\");};this.citiesList=function(){return axios.get(\"/api/cities/\");};this.organizationsList=function(){return axios.get(\"/api/organizations/\");};this.domainSave=function(data){return axios({url:\"/api/domains/add\",method:\"post\",data:data,headers:{\"Content-Type\":\"multipart/form-data\"}});};});export{ApiService as default};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/services/api-service.js"],"names":["axios","sendFormWithAttach","url","form","type","config","headers","send","FormData","Object","keys","forEach","key","length","el","append","post","put","ApiService","login","pass","console","log","ping","get","logout","domainsList","domain","id","addDomain","deleteDomain","delete","templatesList","citiesList","organizationsList","domainSave","data","method"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nconst sendFormWithAttach = (url, form, type) => {\n    const config = {\n        headers: { 'content-type': 'multipart/form-data' }\n      }\n      const send = new FormData()\n      Object.keys(form).forEach((key) => {\n        if (key == \"files\"){\n            if (form[key].length>1) {\n                form[key].forEach((el) =>{\n                    send.append(\"files\", form[key]);\n                })\n            } else {\n                send.append('file',  form[key][0])\n            }\n        }\n        send.append(key, form[key])\n      })\n      if(type=='post'){\n        return axios.post(url, send,  {headers: { 'content-type': 'multipart/form-data' }})\n      } else if(type == 'put'){\n        return axios.put(url, send,  {headers: { 'content-type': 'multipart/form-data' }})\n      }\n}\n\nexport default class ApiService{\n    login = (login, pass) => { \n        console.log(login)\n        console.log(pass)\n        return axios.post(\"/sign-in\", {login,pass})\n    }\n\n    ping = () => {\n        return axios.get(\"/api/ping\")\n    }\n\n    logout = () => {\n        return axios.get(\"/api/logout\")\n    }\n\n    domainsList = () => {\n        return axios.get(\"/api/domains\")\n    }\n\n    domain = (id) => {\n        return axios.get(\"/api/domains/\"+id)\n    }\n\n    addDomain = () => {\n        return axios.put(\"/api/domains/\")\n    }\n\n    deleteDomain = (id) => {\n        return axios.delete(\"/api/domains/\"+id)\n    }\n\n    templatesList = () => {\n        return axios.get(\"/api/templates/\")\n    }\n\n    citiesList = () => {\n        return axios.get(\"/api/cities/\")\n    }\n\n    organizationsList = () => {\n        return axios.get(\"/api/organizations/\")\n    }\n\n    domainSave = (data) => {\n        return axios({\n            url: \"/api/domains/add\",\n            method: \"post\",\n            data: data,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}