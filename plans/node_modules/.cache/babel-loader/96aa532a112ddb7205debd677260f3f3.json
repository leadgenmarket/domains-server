{"ast":null,"code":"var domainsRequested=function domainsRequested(){return{type:'DOMIANS_REQUESTED'};};var domainsRequestSuccess=function domainsRequestSuccess(domains){return{type:'DOMIANS_FETCH_SUCCESS',payload:domains};};var domainsRequestError=function domainsRequestError(){return{type:'DOMIANS_FETCH_ERROR'};};var deleteDomainAction=function deleteDomainAction(id){return{type:'DOMAINS_DELETE_ONE',payload:id};};var addDomainToList=function addDomainToList(domain){return{type:'DOMAINS_ADD_ONE',payload:domain};};var removeDomainFromList=function removeDomainFromList(id){return{type:'DOMAINS_REMOVE_ONE',payload:id};};var fetchDomains=function fetchDomains(apiService){return function(){return function(dispatch){dispatch(domainsRequested);apiService.domainsList().then(function(response){return dispatch(domainsRequestSuccess(response.data));}).catch(function(err){return dispatch(domainsRequestError(err));});};};};var deleteDomain=function deleteDomain(apiService){return function(id){return function(dispatch){apiService.deleteDomain(id).then(function(response){return dispatch(deleteDomainAction(id));}).catch(function(err){return dispatch(domainsRequestError(err));});};};};export{fetchDomains,addDomainToList,deleteDomain,removeDomainFromList};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/actions/domains.js"],"names":["domainsRequested","type","domainsRequestSuccess","domains","payload","domainsRequestError","deleteDomainAction","id","addDomainToList","domain","removeDomainFromList","fetchDomains","apiService","dispatch","domainsList","then","response","data","catch","err","deleteDomain"],"mappings":"AAAA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,MAAO,CACHC,IAAI,CAAE,mBADH,CAAP,CAGH,CAJD,CAMA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,OAAD,CAAa,CACvC,MAAO,CACHF,IAAI,CAAE,uBADH,CAEHG,OAAO,CAAED,OAFN,CAAP,CAIH,CALD,CAOA,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,MAAO,CACHJ,IAAI,CAAE,qBADH,CAAP,CAGH,CAJD,CAMA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,EAAD,CAAQ,CAC/B,MAAO,CACHN,IAAI,CAAE,oBADH,CAEHG,OAAO,CAAEG,EAFN,CAAP,CAIH,CALD,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAY,CAChC,MAAM,CACFR,IAAI,CAAE,iBADJ,CAEFG,OAAO,CAAEK,MAFP,CAAN,CAIH,CALD,CAOA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACH,EAAD,CAAQ,CACjC,MAAM,CACFN,IAAI,CAAE,oBADJ,CAEFG,OAAO,CAAEG,EAFP,CAAN,CAIH,CALD,CAOA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,QAAgB,kBAAM,UAACC,QAAD,CAAc,CACrDA,QAAQ,CAACb,gBAAD,CAAR,CACAY,UAAU,CAACE,WAAX,GACKC,IADL,CACU,SAACC,QAAD,QAAcH,CAAAA,QAAQ,CAACX,qBAAqB,CAACc,QAAQ,CAACC,IAAV,CAAtB,CAAtB,EADV,EAEKC,KAFL,CAEW,SAACC,GAAD,QAASN,CAAAA,QAAQ,CAACR,mBAAmB,CAACc,GAAD,CAApB,CAAjB,EAFX,EAGH,CALoC,EAAhB,EAArB,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,UAAD,QAAgB,UAACL,EAAD,QAAQ,UAACM,QAAD,CAAc,CACvDD,UAAU,CAACQ,YAAX,CAAwBb,EAAxB,EACKQ,IADL,CACU,SAACC,QAAD,QAAcH,CAAAA,QAAQ,CAACP,kBAAkB,CAACC,EAAD,CAAnB,CAAtB,EADV,EAEKW,KAFL,CAEW,SAACC,GAAD,QAASN,CAAAA,QAAQ,CAACR,mBAAmB,CAACc,GAAD,CAApB,CAAjB,EAFX,EAGH,CAJoC,EAAhB,EAArB,CASA,OACIR,YADJ,CAEIH,eAFJ,CAGIY,YAHJ,CAIIV,oBAJJ","sourcesContent":["const domainsRequested = () => {\n    return {\n        type: 'DOMIANS_REQUESTED',\n    }\n}\n\nconst domainsRequestSuccess = (domains) => {\n    return {\n        type: 'DOMIANS_FETCH_SUCCESS',\n        payload: domains\n    }\n}\n\nconst domainsRequestError = () => {\n    return {\n        type: 'DOMIANS_FETCH_ERROR',\n    }\n}\n\nconst deleteDomainAction = (id) => {\n    return {\n        type: 'DOMAINS_DELETE_ONE',\n        payload: id\n    }\n}\n\nconst addDomainToList = (domain) => {\n    return{\n        type: 'DOMAINS_ADD_ONE',\n        payload: domain\n    }\n}\n\nconst removeDomainFromList = (id) => {\n    return{\n        type: 'DOMAINS_REMOVE_ONE',\n        payload: id\n    }\n}\n\nconst fetchDomains = (apiService) => () => (dispatch) => {\n    dispatch(domainsRequested)\n    apiService.domainsList()\n        .then((response) => dispatch(domainsRequestSuccess(response.data)))\n        .catch((err) => dispatch(domainsRequestError(err)))\n}\n\nconst deleteDomain = (apiService) => (id) => (dispatch) => {\n    apiService.deleteDomain(id)\n        .then((response) => dispatch(deleteDomainAction(id)))\n        .catch((err) => dispatch(domainsRequestError(err)))\n}\n\n\n\n\nexport {\n    fetchDomains,\n    addDomainToList,\n    deleteDomain,\n    removeDomainFromList\n}"]},"metadata":{},"sourceType":"module"}