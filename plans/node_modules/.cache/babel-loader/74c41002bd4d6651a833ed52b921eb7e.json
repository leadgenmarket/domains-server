{"ast":null,"code":"const updateObject = (objectUpd, state) => {\n  let objects = [];\n  state.objectsList.objects.forEach(object => {\n    if (objectUpd.ID == object.ID) {\n      objects.push(objectUpd);\n    } else {\n      objects.push(object);\n    }\n  });\n  return { ...state.objectsList,\n    objects: objects\n  };\n};\n\nconst deleteObject = (objectID, state) => {\n  let objects = [];\n  state.objectsList.objects.forEach(object => {\n    if (objectID != object.ID) {\n      objects.push(object);\n    }\n  });\n  return { ...state.objectsList,\n    objects: objects\n  };\n};\n\nconst updateObjectsList = (state, action) => {\n  if (state === undefined) {\n    return {\n      objects: undefined,\n      activeObject: null,\n      loading: true,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_OBJECTS_REQUEST':\n      return {\n        objects: action.payload,\n        activeObject: null,\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_OBJECTS_SUCCESS':\n      return {\n        objects: action.payload,\n        activeObject: action.payload[0],\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_OBJECTS_FAILURE':\n      return {\n        objects: [],\n        activeObject: null,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'ADD_NEW_OBJECT':\n      let newObjects = state.objectsList.objects;\n      newObjects.push(action.payload);\n      return { ...state.objectsList,\n        objects: newObjects\n      };\n\n    case 'SET_ACTIVE_OBJECT':\n      return { ...state.objectsList,\n        activeObject: action.payload\n      };\n\n    case 'DELETE_OBJECT':\n      console.log(state.objectsList.objects.filter(object => action.payload != object.ID));\n      return deleteObject(action.payload, state);\n\n    case 'UPDATE_OBJECT':\n      return updateObject(action.payload, state);\n\n    default:\n      return state.objectsList;\n  }\n};\n\nexport default updateObjectsList;","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/reducers/updateObjectsList.js"],"names":["updateObject","objectUpd","state","objects","objectsList","forEach","object","ID","push","deleteObject","objectID","updateObjectsList","action","undefined","activeObject","loading","error","type","payload","newObjects","console","log","filter"],"mappings":"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","sourcesContent":["\nconst updateObject = (objectUpd, state) => {\n  let objects = []\n  state.objectsList.objects.forEach(object => {\n    if (objectUpd.ID == object.ID) {\n      objects.push(objectUpd)\n    } else {\n      objects.push(object)\n    }\n  });\n\n  return {\n    ...state.objectsList,\n    objects: objects\n  }\n\n}\n\nconst deleteObject = (objectID, state) => {\n  let objects = []\n  state.objectsList.objects.forEach(object => {\n    if (objectID != object.ID) {\n      objects.push(object)\n    }\n  });\n\n  return {\n    ...state.objectsList,\n    objects: objects\n  }\n\n}\nconst updateObjectsList = (state, action) => {\n\n    if (state === undefined) {\n      return {\n        objects: undefined,\n        activeObject: null,\n        loading: true,\n        error: null\n      };\n    }\n  \n    switch (action.type) {\n      case 'FETCH_OBJECTS_REQUEST':\n        return {\n          objects: action.payload,\n          activeObject: null,\n          loading: true,\n          error: null,\n        };\n  \n      case 'FETCH_OBJECTS_SUCCESS':\n        return {\n          objects: action.payload,\n          activeObject: action.payload[0],\n          loading: false,\n          error: null,\n      };\n\n      case 'FETCH_OBJECTS_FAILURE':\n        return {\n          objects: [],\n          activeObject: null,\n          loading: false,\n          error: action.payload,\n        };\n      \n      case 'ADD_NEW_OBJECT': \n        let newObjects = state.objectsList.objects;\n        newObjects.push(action.payload);\n        return {\n          ...state.objectsList,\n          objects: newObjects,\n        }\n      \n      case 'SET_ACTIVE_OBJECT':\n        return {\n          ...state.objectsList,\n          activeObject: action.payload,\n      };\n\n      case 'DELETE_OBJECT':\n        console.log(state.objectsList.objects.filter((object) => action.payload != object.ID))\n        return deleteObject(action.payload, state)\n      \n      case 'UPDATE_OBJECT':\n        return updateObject(action.payload, state)\n  \n      default:\n        return state.objectsList;\n    }\n  };\n  \n  export default updateObjectsList;"]},"metadata":{},"sourceType":"module"}