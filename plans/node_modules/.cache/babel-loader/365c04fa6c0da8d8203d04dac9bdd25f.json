{"ast":null,"code":"var leadsRequested=function leadsRequested(){return{type:'LEADS_REQUESTED'};};var leadsRequestSuccess=function leadsRequestSuccess(leads){return{type:'LEADS_FETCH_SUCCESS',payload:leads};};var leadsRequestMoreSuccess=function leadsRequestMoreSuccess(leads){return{type:'LEADS_GET_MORE',payload:leads};};var leadsRequestError=function leadsRequestError(){return{type:'LEADS_FETCH_ERROR'};};var leadsFetchMoreError=function leadsFetchMoreError(){return{type:'LEADS_FETCH_MORE_ERROR'};};var deleteLeadAction=function deleteLeadAction(id){return{type:'LEADS_DELETE_ONE',payload:id};};var addLeadToList=function addLeadToList(domain){return{type:'LEADS_ADD_ONE',payload:domain};};var removeLeadFromList=function removeLeadFromList(id){return{type:'LEADS_REMOVE_ONE',payload:id};};var fetchLeads=function fetchLeads(apiService){return function(searchUrl,cursor,itemscnt){return function(dispatch){dispatch(leadsRequested);apiService.leadsList(searchUrl,cursor,itemscnt).then(function(response){return dispatch(leadsRequestSuccess(response.data));}).catch(function(err){return dispatch(leadsRequestError(err));});};};};var fetchMoreLeads=function fetchMoreLeads(apiService){return function(searchUrl,cursor,itemscnt){return function(dispatch){dispatch(leadsRequested);apiService.leadsList(searchUrl,cursor,itemscnt).then(function(response){return dispatch(leadsRequestMoreSuccess(response.data));}).catch(function(err){return dispatch(leadsFetchMoreError(err));});};};};var deleteLead=function deleteLead(apiService){return function(id){return function(dispatch){apiService.deleteLead(id).then(function(response){return dispatch(deleteLeadAction(id));}).catch(function(err){return dispatch(leadsRequestError(err));});};};};export{fetchLeads,addLeadToList,deleteLead,removeLeadFromList,fetchMoreLeads};","map":{"version":3,"sources":["/Users/laurkankusu/Documents/development/domains-server/admin/src/actions/leads.js"],"names":["leadsRequested","type","leadsRequestSuccess","leads","payload","leadsRequestMoreSuccess","leadsRequestError","leadsFetchMoreError","deleteLeadAction","id","addLeadToList","domain","removeLeadFromList","fetchLeads","apiService","searchUrl","cursor","itemscnt","dispatch","leadsList","then","response","data","catch","err","fetchMoreLeads","deleteLead"],"mappings":"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","sourcesContent":["const leadsRequested = () => {\n    return {\n        type: 'LEADS_REQUESTED',\n    }\n}\n\nconst leadsRequestSuccess = (leads) => {\n    return {\n        type: 'LEADS_FETCH_SUCCESS',\n        payload: leads\n    }\n}\n\nconst leadsRequestMoreSuccess = (leads) => {\n    return {\n        type: 'LEADS_GET_MORE',\n        payload: leads\n    }\n}\n\nconst leadsRequestError = () => {\n    return {\n        type: 'LEADS_FETCH_ERROR',\n    }\n}\n\nconst leadsFetchMoreError = () => {\n    return {\n        type: 'LEADS_FETCH_MORE_ERROR',\n    }\n}\n\nconst deleteLeadAction = (id) => {\n    return {\n        type: 'LEADS_DELETE_ONE',\n        payload: id\n    }\n}\n\nconst addLeadToList = (domain) => {\n    return {\n        type: 'LEADS_ADD_ONE',\n        payload: domain\n    }\n}\n\nconst removeLeadFromList = (id) => {\n    return {\n        type: 'LEADS_REMOVE_ONE',\n        payload: id\n    }\n}\n\nconst fetchLeads = (apiService) => (searchUrl, cursor, itemscnt) => (dispatch) => {\n    dispatch(leadsRequested)\n    apiService.leadsList(searchUrl, cursor, itemscnt)\n        .then((response) => dispatch(leadsRequestSuccess(response.data)))\n        .catch((err) => dispatch(leadsRequestError(err)))\n}\n\nconst fetchMoreLeads = (apiService) => (searchUrl, cursor, itemscnt) => (dispatch) => {\n    dispatch(leadsRequested)\n    apiService.leadsList(searchUrl, cursor, itemscnt)\n        .then((response) => dispatch(leadsRequestMoreSuccess(response.data)))\n        .catch((err) => dispatch(leadsFetchMoreError(err)))\n}\n\nconst deleteLead = (apiService) => (id) => (dispatch) => {\n    apiService.deleteLead(id)\n        .then((response) => dispatch(deleteLeadAction(id)))\n        .catch((err) => dispatch(leadsRequestError(err)))\n}\n\n\n\n\nexport {\n    fetchLeads,\n    addLeadToList,\n    deleteLead,\n    removeLeadFromList,\n    fetchMoreLeads\n}"]},"metadata":{},"sourceType":"module"}